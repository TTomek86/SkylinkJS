/*! skylinkjs - v0.7.0 - 2016-04-27 */
function Skylink(){SkylinkEvent._mixin(this,SkylinkEventList),this._globals={current:{},defaults:{appKey:null,defaultRoom:null,selectedRoom:null,roomServer:"//api.temasys.com.sg",region:null,enableIceTrickle:!0,enableDataChannel:!0,enableTURNServer:!0,enableSTUNServer:!0,forceTURN:!1,usePublicSTUN:!0,TURNServerTransport:this.TURN_TRANSPORT.ANY,credentials:null,audioFallback:!1,forceSSL:!1,audioCodec:this.AUDIO_CODEC.AUTO,videoCodec:this.VIDEO_CODEC.AUTO,socketTimeout:2e4,forceTURNSSL:!1}},this._session={state:0,url:null,data:null},this._user={id:null,agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:null},data:null},this._supportedBrowsers={chrome:45,firefox:40,opera:32,IE:9,safari:7}}var logFn=function(method){return function(logArray,logParam){var ts=new Date,tsLog=ts.getFullYear().toString()+"."+(ts.getMonth()+1).toString()+"."+ts.getDate().toString()+"."+ts.getHours().toString()+":"+ts.getMinutes().toString()+":"+ts.getSeconds().toString()+":"+ts.getMilliseconds().toString(),log="SkylinkJS ["+method.toUpperCase()+"] [@"+tsLog+"] ";"Skylink"===logArray[1]&&logArray[2]?(log+=":: "+logArray[2]+" ",logArray[0]&&(log+=Array.isArray(logArray[0])?"-> (peerIds: ["+logArray[0].join(",")+"]) ":"-> (peerId: "+logArray[0]+") "),log+="- "):(log+="- ",logArray[0]&&(log+="["+logArray[0]+"] "),logArray[1]&&(log+="<<"+logArray[1]+">> "),logArray[2]&&(log+="("+logArray[2]+") ")),log+=logArray[3]}},log={debug:logFn("debug"),log:logFn("log"),info:logFn("info"),warn:logFn("warn"),error:logFn("error")},Logger={_flags:{level:0,trace:!1,store:!0},_header:"SkylinkJS",_storage:{debug:[],log:[],info:[],warn:[],error:[]},_loggers:{},_appendLoggers:function(){var self=this,consoleCopy={};consoleCopy.log="function"==typeof console.log?window.console.log:function(){},consoleCopy.debug="function"==typeof console.debug?window.console.debug:consoleCopy.log,consoleCopy.info="function"==typeof console.info?window.console.info:consoleCopy.log,consoleCopy.warn="function"==typeof console.warn?window.console.warn:consoleCopy.log,consoleCopy.error="function"==typeof console.error?window.console.error:consoleCopy.log,consoleCopy.trace="function"==typeof console.trace?window.console.trace:consoleCopy.log;var bind=function(m,displayConsole){return function(){var args=Array.prototype.slice.call(arguments);if(self._flags.store&&self._storage[m].push([(new Date).toISOString(),args]),displayConsole){var mn=m,mt="";return self._flags.trace&&(mn="trace",mt="["+m.toUpperCase()+"] :: "),consoleCopy[mn].bind(window.console,mt+self._header)}return function(){}}};switch(this._loggers={},this._loggers.debug=bind("debug",!1),this._loggers.log=bind("log",!1),this._loggers.info=bind("info",!1),this._loggers.warn=bind("warn",!1),this._loggers.error=bind("error",!1),this._flags.level){case 5:this._loggers.debug=bind("debug",!0);case 4:this._loggers.log=bind("log",!0);case 3:this._loggers.info=bind("info",!0);case 2:this._loggers.warn=bind("warn",!0);case 1:this._loggers.error=bind("error",!0)}},configure:function(options){"number"==typeof options&&options>-1&&6>options?this._flags.level=options:"object"==typeof options&&null!==options&&("number"==typeof options.level&&options.level>-1&&options.level<6&&(this._flags.level=options.level),"boolean"==typeof options.trace&&(this._flags.trace=options.trace),"boolean"==typeof options.store&&(this._flags.store=options.store)),this._appendLoggers()},mixin:function(d,obj){var self=this,fn=function(type){return function(){for(var args=Array.prototype.slice.call(arguments),data=d(),i=data.length;i>0;i--)args.splice(0,0,data[i-1]);self._loggers[type].apply(this,args).apply(this,args)}};obj._log={debug:fn("debug"),log:fn("log"),info:fn("info"),warn:fn("warn"),error:fn("error")}}};Logger.configure(),Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",SILK:"SILK",ILBC:"iLBC",G722:"G722",G711:"G711"},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",BINARY:"binary",STRING:"string"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATAURL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted"},Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.0",Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",INTRODUCED:"introduced",ERROR:"error"},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0,NO_LOGS:-1},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed",ERROR:"error"},Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7},Skylink.prototype.READY_STATE_CHANGE_ERROR_STATUS={NO_REQUEST_MADE:-2,REQUEST_ERROR:-1,REQUEST_EMPTY_RESULT:0,REQUEST_FAILED:200},Skylink.prototype.REGIONAL_SERVER={APAC1:"sg",US1:"us2"},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.1",Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={ROOM_LOCKED:"locked",DUPLICATED_LOGIN:"duplicatedLogin",SERVER_ERROR:"serverError",EXPIRED:"expired",ROOM_CLOSED:"roomclose",ROOM_CLOSING:"toclose"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype.VERSION="0.7.0",Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",VP9:"VP9",H264:"H264",H264UC:"H264UC"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}};var SkylinkEventList={readyStateChange:[]};Skylink.prototype.init=function(options,callback){var self=this;self._globals.current=SkylinkUtils.objectCloneFn(self._globals.defaults);var processSetStateFn=function(state,error){if(log.log([null,"Skylink","init()","Ready state ->"],state),self._session.state=state,self._trigger("readyStateChange",state,error||null,self._globals.current.selectedRoom),[self.READY_STATE_CHANGE.ERROR,self.READY_STATE_CHANGE.COMPLETED].indexOf(state)>-1){var responseFn="function"==typeof callback?callback:function(){};error?(log.error([null,"Skylink","init()","Process failed with error ->"],error),responseFn({errorCode:error.errorCode,error:error.content,status:error.status},null)):(log.log([null,"Skylink","init()","Process completed successfully"]),responseFn(null,{serverUrl:self._session.url,readyState:state,appKey:self._appKey,roomServer:self._globals.current.roomServer,defaultRoom:self._globals.current.defaultRoom,selectedRoom:self._globals.current.selectedRoom,serverRegion:self._globals.current.region,enableDataChannel:self._globals.current.enableDataChannel,enableIceTrickle:self._globals.current.enableIceTrickle,enableTURNServer:self._globals.current.enableTURNServer,enableSTUNServer:self._globals.current.enableSTUNServer,TURNTransport:self._globals.current.TURNServerTransport,audioFallback:self._globals.current.audioFallback,forceSSL:self._globals.current.forceSSL,socketTimeout:self._globals.current.socketTimeout,forceTURNSSL:self._globals.current.forceTURNSSL,audioCodec:self._globals.current.audioCodec,videoCodec:self._globals.current.videoCodec,forceTURN:self._globals.current.forceTURN,usePublicSTUN:self._globals.current.usePublicSTUN}))}};if(log.debug([null,"Skylink","init()","Parsing configuration options ->"],options),processSetStateFn(self.READY_STATE_CHANGE.INIT),"string"==typeof options&&options)self._globals.current.appKey=options,self._globals.current.defaultRoom=options;else{if("object"!=typeof options||!options)return"function"==typeof options&&(callback=options),void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "appKey" value is not provided'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});if("string"==typeof options.appKey&&options.appKey)self._globals.current.appKey=options.appKey;else{if("string"!=typeof options.apiKey||!options.apiKey)return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "appKey" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.appKey=options.apiKey}if("string"==typeof options.defaultRoom&&options.defaultRoom?self._globals.current.defaultRoom=options.defaultRoom:self._globals.current.defaultRoom=self._globals.current.appKey,"string"==typeof options.roomServer&&options.roomServer){if(!(options.roomServer.length>3&&0===options.roomServer.indexOf("//")&&-1===options.roomServer.substring(2,options.roomServer.length).indexOf("/")))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "roomServer" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.roomServer=options.roomServer}if("string"==typeof options.region&&options.region){if(!SkylinkUtils.objectContainsFn(self.REGIONAL_SERVER,options.region))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "region" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.region=options.region}if("boolean"==typeof options.enableIceTrickle&&(self._globals.current.enableIceTrickle=options.enableIceTrickle),"boolean"==typeof options.enableDataChannel&&(self._globals.current.enableDataChannel=options.enableDataChannel),"boolean"==typeof options.enableTURNServer&&(self._globals.current.enableTURNServer=options.enableTURNServer),"boolean"==typeof options.enableSTUNServer&&(self._globals.current.enableSTUNServer=options.enableSTUNServer),"boolean"==typeof options.forceTURN&&(self._globals.current.forceTURN=options.forceTURN),"boolean"==typeof options.usePublicSTUN&&(self._globals.current.usePublicSTUN=options.usePublicSTUN),"string"==typeof options.TURNServerTransport&&options.TURNServerTransport){if(!SkylinkUtils.objectContainsFn(self.TURN_TRANSPORT,options.TURNServerTransport))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "TURNServerTransport" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.TURNServerTransport=options.TURNServerTransport}if("object"==typeof options.credentials&&options.credentials){if("string"!=typeof options.credentials.startDateTime||window.isNaN(new Date(options.credentials.startDateTime).getTime()))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "credentials.startDateTime" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});if(!("number"==typeof options.credentials.duration&&options.credentials.duration>0))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "credentials.duration" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});if("string"!=typeof options.credentials.credentials||!options.credentials.credentials)return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "credentials.credentials" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.credentials={startDateTime:options.credentials.startDateTime,duration:options.credentials.duration,credentials:options.credentials.credentials}}if("boolean"==typeof options.audioFallback&&(self._globals.current.audioFallback=options.audioFallback),"boolean"==typeof options.forceSSL&&"https:"!==window.location.protocol&&(self._globals.current.forceSSL=options.forceSSL),"string"==typeof options.audioCodec&&options.audioCodec){if(!SkylinkUtils.objectContainsFn(self.AUDIO_CODEC,options.audioCodec))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "audioCodec" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.audioCodec=options.audioCodec}if("string"==typeof options.videoCodec&&options.videoCodec){if(!SkylinkUtils.objectContainsFn(self.VIDEO_CODEC,options.videoCodec))return void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,content:new Error('Failed configuration as "videoCodec" value provided is invalid'),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE});self._globals.current.videoCodec=options.videoCodec}"boolean"==typeof options.forceTURNSSL&&"https:"!==window.location.protocol&&(self._globals.current.forceTURNSSL=options.forceTURNSSL)}return window.AdapterJS?("0.13.3"!==window.AdapterJS.VERSION&&log.warn([null,"Skylink","init()",'Dependency AdapterJS is loaded at the wrong version "'+window.AdapterJS.VERSION+'".\nPlease load from https://github.com/Temasys/AdapterJS/releases/tag/0.13.3 for the correct version']),window.io?["object","function"].indexOf(typeof window.XDomainRequest)&&!window.XMLHttpRequest?void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT,content:new Error("Failed loading required API XMLHttpRequest. Please switch to a supported browser from https://github.com/Temasys/SkylinkJS#supported-browsers"),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE}):void window.AdapterJS.webRTCReady(function(){return log.log([null,"Skylink","init()","Loaded AdapterJS WebRTC functions"]),window.RTCPeerConnection?("number"==typeof self._supportedBrowsers[self._user.agent.name]&&self._supportedBrowsers[self._user.agent.name]<=self._user.agent.version||log.warn([null,"Skylink","init()","You are currently using an unsupported browser which may cause connectivity issues later on. Please switch to a supported browser from https://github.com/Temasys/SkylinkJS#supported-browsers"]),window.AdapterJS.WebRTCPlugin&&window.AdapterJS.WebRTCPlugin.plugin&&window.AdapterJS.WebRTCPlugin.plugin.VERSION&&(self._user.agent.pluginVersion=window.AdapterJS.WebRTCPlugin.plugin.VERSION,log.info([null,"Skylink","init()","You are using Temasys plugin version ->"],self._user.agent.pluginVersion)),self._globals.current.selectedRoom=self._globals.current.defaultRoom,log.debug([null,"Skylink","init()","Starting connection session with configuration ->"],self._globals.current),processSetStateFn(self.READY_STATE_CHANGE.LOADING),void SkylinkAPI.requestFn(self._globals.current,function(state,data){"request"===state?(log.debug([null,"Skylink","init()","Starting connection session request to HTTP URL ->"],data),self._session.url=data):"started"===state?(log.info([null,"Skylink","init()","Started connection session successfully ->"],data),self._session.data=data,processSetStateFn(self.READY_STATE_CHANGE.COMPLETED)):"error"===state?(log.error([null,"Skylink","init()","Failed starting connection session ->"],data),processSetStateFn(self.READY_STATE_CHANGE.ERROR,data)):"restart"===state&&log.debug([null,"Skylink","init()","Retrying starting connection session attempt ->"],data)})):void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT,content:new Error("Failed loading required API RTCPeerConnection. Please switch to a supported browser from https://github.com/Temasys/SkylinkJS#supported-browsers"),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE})}):void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO,content:new Error("Failed loading required dependency socket.io-client.\nPlease load from https://github.com/socketio/socket.io-client/releases/tag/1.4.4"),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE})):void processSetStateFn(self.READY_STATE_CHANGE.ERROR,{errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED,content:new Error("Failed loading required dependency AdapterJS.\nPlease load from https://github.com/Temasys/AdapterJS/releases/tag/0.13.3"),status:self.READY_STATE_CHANGE_ERROR_STATUS.NO_REQUEST_MADE})};var SkylinkAPI={URLBuilderFn:function(options){var baseUrl=options.forceSSL?"https:":window.location.protocol,queries=["rand="+(new Date).getTime()];return baseUrl+=options.roomServer+"/api/"+options.appKey+"/"+options.selectedRoom,options.credentials&&(baseUrl+="/"+options.credentials.startDateTime+"/"+options.credentials.duration,queries.splice(0,0,"cred="+options.credentials.credentials)),options.region&&queries.splice(0,0,"rg="+options.region),baseUrl+"?"+queries.join("&")},requestFn:function(options,fn){var self=this,xhr=null,retries=0;xhr=["object","function"].indexOf(typeof window.XDomainRequest)>-1?new window.XDomainRequest:new window.XMLHttpRequest;var openFn=function(){var url=self.URLBuilderFn(options);fn("request",url),xhr.open("GET",url,!0),xhr.send()};xhr.onload=function(){var result=JSON.parse(xhr.responseText||xhr.response||"{}");return 0===Object.keys(result).length?void fn("error",{errorCode:Skylink.prototype.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR,content:new Error("Failed API request as loaded session is empty"),status:0}):void(result.success?fn("started",result):fn("error",{errorCode:result.error,content:new Error(result.info),status:200}))},xhr.onerror=function(error){return 5===retries?void fn("error",{errorCode:Skylink.prototype.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR,content:new Error("Failed API request as connection has timed out"),status:-1}):(retries++,fn("restart",retries),void openFn())},xhr.onprogress=function(evt){fn("starting")},openFn()}},SkylinkEvent={on:function(event,callback){if(!Array.isArray(this._listeners.on[event]))throw new Error("Failed on subscription as invalid Event name is provided.");this._listeners.on[event].push(callback)},off:function(event,callback){if(!Array.isArray(this._listeners.once[event])&&!Array.isArray(this._listeners.on[event]))throw new Error("Failed unsubscription as invalid Event name is provided.");"undefined"==typeof event&&(this._listeners.on={},this._listeners.once={}),"undefined"==typeof callback?(this._listeners.on[event]=[],this._listeners.once[event]=[]):(this._listeners.on[event]&&this._removeListener(this._listeners.on[event],callback),this._listeners.once[event]&&this._removeListener(this._listeners.once[event],callback))},once:function(event,callback,condition){if(!Array.isArray(this._listeners.once[event]))throw new Error("Failed once subscription as invalid Event name is provided.");"function"!=typeof condition&&(condition=function(){return!0}),this._listeners.once[event].push([callback,condition])},_trigger:function(event){var args=Array.prototype.slice.call(arguments,1);if(this._listeners.on[event])for(var i=0;i<this._listeners.on[event].length;i++)this._listeners.on[event][i].apply(this,args);if(this._listeners.once[event])for(var j=0;j<this._listeners.once[event].length;j++)this._listeners.once[event][j][1].apply(this,args)&&(this._listeners.once[event][j][0].apply(this,args),this._listeners.once[event].splice(j,1),j--)},_removeListener:function(listeners,listener){for(var i=0;i<listeners.length;i++){var listenerIndex=listeners[i];if(Array.isArray(listenerIndex)&&(listenerIndex=listeners[i][0]),listenerIndex===listener)return void listeners.splice(i,1)}},_mixin:function(object,eventList){for(var methods=["on","off","once","_trigger","_removeListener"],i=0;i<methods.length;i++)SkylinkEvent.hasOwnProperty(methods[i])&&("function"==typeof object?object.prototype[methods[i]]=SkylinkEvent[methods[i]]:object[methods[i]]=SkylinkEvent[methods[i]]);object._listeners={on:SkylinkUtils.objectCloneFn(eventList),once:SkylinkUtils.objectCloneFn(eventList)}}},SkylinkUtils={objectCloneFn:function(obj){return"object"!=typeof obj||null===obj?obj:JSON.parse(JSON.stringify(obj))},objectLoopFn:function(obj,fn){if(Array.isArray(obj))for(var arrayCI=0,arrayLen=obj.length;arrayLen>arrayCI&&!fn(obj[arrayCI],arrayCI);)arrayCI++;else if("object"==typeof obj)for(var keys=Object.keys(obj),objCI=0,objLen=keys.length;objLen>objCI&&!fn(obj[keys[objCI]],keys[objCI]);)objCI++},objectContainsFn:function(obj,value){var exists=!1;return this.objectLoopFn(obj,function(currentValue){return currentValue===value?(exists=!0,!0):void 0}),exists}};