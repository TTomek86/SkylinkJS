/*! skylinkjs - v0.6.7 - 2016-01-13 */
(function(){"use strict";function Skylink(){return this instanceof Skylink?void 0:new Skylink}function DataChannel(options){SkylinkEvent._mixin(this),"function"==typeof options.send?(this.id=options.label,this.type="main"===options.label?"messaging":"data",this.reliable=!!options.ordered,this._RTCDataChannel=options,this._RTCDataChannelInit=null):(this.id=options.id,this.type="main"===options.id?"messaging":"data",this._construct(options.RTCPeerConnection)),this._listenToEvents(),this.reliable}function SkylinkPeer(config){SkylinkEvent._mixin(this),this.id=config.id,this.agent.name=config.agent.name,this.agent.version=config.agent.version,this.agent.os=config.agent.os,this.data=config.data,this.stream=config.stream,this._connection.iceServers=config.iceServers,config.connection.trickleICE===!1&&(this._connection.trickleICE=!1),config.connection.datachannel===!1&&(this._connection.datachannel=!1),config.connection.recvonly===!0&&(this._connection.recvonly=!0),config.connection.stereo===!1&&(this._connection.stereo=!1),"object"==typeof config.connection.bandwidth&&null!==config.connection.bandwidth&&("number"==typeof config.connection.bandwidth.audio&&config.connection.bandwidth.audio>0&&(this._connection.bandwidth.audio=config.connection.bandwidth.audio),"number"==typeof config.connection.bandwidth.video&&config.connection.bandwidth.video>0&&(this._connection.bandwidth.video=config.connection.bandwidth.video),"number"==typeof config.connection.bandwidth.data&&config.connection.bandwidth.data>0&&(this._connection.bandwidth.data=config.connection.bandwidth.data)),this.connect(),log.debug([this.id,"Peer",null,"Ready for connection handshaking"])}function SkylinkRoom(room){SkylinkEvent._mixin(this),this.name=globals.defaultRoom,"string"==typeof room&&room&&(this.name=room),this._session.random=(new Date).getTime(),this._session.protocol=window.location.protocol,globals.forceSSL&&(this._session.protocol="https:");var append="?";this._session.path=this._session.protocol+globals.roomServer+"/api/"+globals.appKey+"/"+this.name,globals.credentials&&(this._session.path+="/"+globals.credentials.startDateTime+"/"+globals.credentials.duration,this._session.path+="?cred="+globals.credentials.credentials,append="&"),this._session.path+=append+"rand="+this._session.random,globals.region&&(this._session.path+=append+"rg="+globals.region),log.debug([null,"Room",this.name,"Constructed path for fetching session"])}function SkylinkSocket(config){SkylinkEvent._mixin(this),this._connection.timeout=config.timeout,"string"==typeof config.server&&config.server&&(this._connection.server=config.server),Array.isArray(config.httpPortList)&&config.httpPortList.length>0&&(this._ports["http:"]=config.httpPortList),Array.isArray(config.httpsPortList)&&config.httpsPortList.length>0&&(this._ports["https:"]=config.httpsPortList),this._connection.port=this._ports[this._connection.protocol][0],window.WebSocket||(this._connection.transport="Polling",log.warn([null,"Socket",null,"Your browser does not support WebSocket transports hence Polling transports is selected"])),log.debug([null,"Socket",null,"Parsed configuration and ready for connection"])}Object.keys||(Object.keys=function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!{toString:null}.propertyIsEnumerable("toString"),dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],dontEnumsLength=dontEnums.length;return function(obj){if("object"!=typeof obj&&"function"!=typeof obj||null===obj)throw new TypeError("Object.keys called on non-object");var result=[];for(var prop in obj)hasOwnProperty.call(obj,prop)&&result.push(prop);if(hasDontEnumBug)for(var i=0;dontEnumsLength>i;i++)hasOwnProperty.call(obj,dontEnums[i])&&result.push(dontEnums[i]);return result}}()),function(){function pad(number){return 10>number?"0"+number:number}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+pad(this.getUTCMonth()+1)+"-"+pad(this.getUTCDate())+"T"+pad(this.getUTCHours())+":"+pad(this.getUTCMinutes())+":"+pad(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),function(win,doc){function docHijack(p){var old=doc[p];doc[p]=function(v){return addListen(old(v))}}function addEvent(on,fn,self){return(self=this).attachEvent("on"+on,function(e){var e=e||win.event;e.preventDefault=e.preventDefault||function(){e.returnValue=!1},e.stopPropagation=e.stopPropagation||function(){e.cancelBubble=!0},fn.call(self,e)})}function addListen(obj,i){if(i=obj.length)for(;i--;)obj[i].addEventListener=addEvent;else obj.addEventListener=addEvent;return obj}win.addEventListener||(addListen([doc,win]),"Element"in win?win.Element.prototype.addEventListener=addEvent:(doc.attachEvent("onreadystatechange",function(){addListen(doc.all)}),docHijack("getElementsByTagName"),docHijack("getElementById"),docHijack("createElement"),addListen(doc.all)))}(window,document);var clone=function(obj){if(null===obj||"object"!=typeof obj)return obj;var copy=obj.constructor();for(var attr in obj)obj.hasOwnProperty(attr)&&(copy[attr]=obj[attr]);return copy};Skylink.prototype.VERSION="0.6.7",Skylink.prototype.generateUUID=function(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"==c?r:7&r|8).toString(16)});return uuid},Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7},Skylink.prototype.REGIONAL_SERVER={APAC1:"sg",US1:"us2"},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={ROOM_LOCKED:"locked",DUPLICATED_LOGIN:"duplicatedLogin",SERVER_ERROR:"serverError",EXPIRED:"expired",ROOM_CLOSED:"roomclose",ROOM_CLOSING:"toclose"},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},this.Skylink=Skylink,Skylink.prototype.VERSION="0.6.7",Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},DataChannel.prototype.id=null,DataChannel.prototype.reliable=!0,DataChannel.prototype.type="data",DataChannel.prototype._RTCDataChannel=null,DataChannel.prototype._RTCDataChannelInit={ordered:!0},DataChannel.prototype._transfers=[],DataChannel.prototype._construct=function(peer){var self=this;if(peer&&(!self._RTCDataChannel||"closed"===self._RTCDataChannel.readyState))try{self._RTCDataChannel=peer.createDataChannel(self.id,self._RTCDataChannelInit)}catch(error){return void self._trigger("error",error)}},DataChannel.prototype.destroy=function(){var self=this;self._RTCDataChannel&&-1===["closing","closed"].indexOf(self._RTCDataChannel.readyState)&&self._RTCDataChannel.close()},DataChannel.prototype.send=function(data){var self=this;if(self._RTCDataChannel){if("open"!==self._RTCDataChannel.readyState){return void self._trigger("error",new Error(error))}var dataString=data;"object"==typeof data&&(dataString=JSON.stringify(data)),self._RTCDataChannel.send(dataString)}},DataChannel.prototype._listenToEvents=function(){var self=this,onopenHandler=function(){self._trigger("state","open")};"open"===self._RTCDataChannel.readyState?setTimeout(onopenHandler,500):(self._trigger("state",self._RTCDataChannel.readyState),self._RTCDataChannel.onopen=onopenHandler),self._RTCDataChannel.onmessage=function(event){var data=event.data||event;self._trigger("data",data)},self._RTCDataChannel.onbufferedamountlow=function(event){self._trigger("bufferedamountlow")},self._RTCDataChannel.onerror=function(event){self._trigger("error",event)},self._RTCDataChannel.onclose=function(){self._trigger("state","closed")}},Skylink.prototype._channels={},Skylink.prototype._createChannel=function(peerId,channelId){var self=this;return self._peerConnections[peerId]?(self._channels[peerId][channelId]=new DataChannel({id:channelId,RTCPeerConnection:self._peerConnections[peerId]}),self._listenToChannel(peerId,channelId),void log.log([peerId,"RTCDataChannel",channelId,"Created RTCDataChannel object for peer session"])):void log.error([peerId,"RTCDataChannel",channelId,"Ignoring creation of RTCDataChannel as peer connection object is missing"])},Skylink.prototype._listenToChannel=function(peerId,channelId){var self=this;if(!self._channels[peerId]||!self._channels[peerId][channelId])return log.error([peerId,"RTCDataChannel",channelId,"Ignoring listening of RTCDataChannel as peer connection object is missing"]);var channelType=self._channels[peerId][channelId].type;self._channels[peerId][channelId].on("data",function(data){self._dataChannelProtocolHandler(data,peerId,channelId,channelType)}),self._channels[peerId][channelId].on("error",function(error){log.error([peerId,"RTCDataChannel",channelId,"Exception occurred in datachannel:"],{channelType:channelType,error:error}),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error,channelId,channelType)}),self._channels[peerId][channelId].on("state",function(state){log.log([peerId,"RTCDataChannel",channelId,"Current RTCDataChannel readyState"],state),self._trigger("dataChannelState",state,peerId,null,channelId,channelType)}),log.log([peerId,"RTCDataChannel",channelId,"RTCDataChannel events listened"])},Skylink.prototype._destroyChannel=function(peerId,channelId){var self=this;return self._peerConnections[peerId]?self._channels[peerId]?self._channels[peerId][channelId]?(self._channels[peerId][channelId].destroy(),delete self._channels[peerId][channelId],void log.log([peerId,"RTCDataChannel",channelId,"Destroyed RTCDataChannel object"])):void log.error([peerId,"RTCDataChannel",channelId,"Ignoring destroying of RTCDataChannel as datachannel session is missing"]):void log.error([peerId,"RTCDataChannel",channelId,"Ignoring destroying of RTCDataChannel as datachannel session (list) is missing"]):void log.error([peerId,"RTCDataChannel",channelId,"Ignoring destroying of RTCDataChannel as peer connection object is missing"])},Skylink.prototype._sendChannelData=function(peerId,channelId,data){var self=this;self._channels[peerId]&&self._channels[peerId][channelId]||log.error([peerId,"RTCDataChannel",channelId,"Ignoring sending of data as RTCDataChannel object session is not found ->"],data);var dataString=data;"object"==typeof data&&(dataString=JSON.stringify(data)),log.debug([peerId,"RTCDataChannel",channelId,"Sending data from RTCDataChannel ->"],data),self._channels[peerId][channelId].send(dataString)},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob"},Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL.replace(/\s\r\n/g,"")),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype._assembleDataURL=function(dataURLArray){for(var outputStr="",i=0;i<dataURLArray.length;i++)try{outputStr+=dataURLArray[i]}catch(error){}return outputStr},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.0",Skylink.prototype._TRANSFER_DELIMITER="_skylink__",Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype._INTEROP_MULTI_TRANSFERS=["Android","iOS"],Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted"},Skylink.prototype._uploadDataTransfers={},Skylink.prototype._uploadDataSessions={},Skylink.prototype._downloadDataTransfers={},Skylink.prototype._downloadDataSessions={},Skylink.prototype._dataTransfersTimeout={},Skylink.prototype._setDataChannelTimeout=function(peerId,timeout,isSender,channelName){var self=this;self._dataTransfersTimeout[channelName]||(self._dataTransfersTimeout[channelName]=null);var type=isSender?self.DATA_TRANSFER_TYPE.UPLOAD:self.DATA_TRANSFER_TYPE.DOWNLOAD;self._dataTransfersTimeout[channelName]=setTimeout(function(){var name;self._dataTransfersTimeout[channelName][type]&&(isSender?(name=self._uploadDataSessions[channelName].name,delete self._uploadDataTransfers[channelName],delete self._uploadDataSessions[channelName]):(name=self._downloadDataSessions[channelName].name,delete self._downloadDataTransfers[channelName],delete self._downloadDataSessions[channelName]),self._sendChannelData(peerId,channelName,{type:self._DC_PROTOCOL_TYPE.ERROR,sender:self._user.sid,name:name,content:"Connection Timeout. Longer than "+timeout+" seconds. Connection is abolished.",isUploadError:isSender}),log.error([peerId,"RTCDataChannel",channelName,"Failed transfering data:"],"Transfer "+(isSender?"for":"from")+" "+peerId+" failed. Connection timeout"),self._clearDataChannelTimeout(peerId,isSender,channelName))},1e3*timeout)},Skylink.prototype._clearDataChannelTimeout=function(peerId,isSender,channelName){this._dataTransfersTimeout[channelName]?(clearTimeout(this._dataTransfersTimeout[channelName]),delete this._dataTransfersTimeout[channelName],log.debug([peerId,"RTCDataChannel",channelName,"Clear datachannel timeout"])):log.debug([peerId,"RTCDataChannel",channelName,"Unable to find timeouts. Not clearing the datachannel timeouts"])},Skylink.prototype._sendBlobDataToPeer=function(data,dataInfo,targetPeerId){var i,self=this,targetChannel=targetPeerId,targetPeerList=[],binarySize=parseInt((dataInfo.size*(4/3)).toFixed(),10),binaryChunkSize=0,chunkSize=0,hasSend=!1;self._hasMCU&&(targetPeerList=Array.isArray(targetPeerList)?targetPeerId:[targetPeerId],targetPeerId="MCU"),"blob"!==dataInfo.dataType?(binaryChunkSize=self._CHUNK_DATAURL_SIZE,chunkSize=self._CHUNK_DATAURL_SIZE,binarySize=dataInfo.size):"firefox"===window.webrtcDetectedBrowser?(binaryChunkSize=self._MOZ_CHUNK_FILE_SIZE*(4/3),chunkSize=self._MOZ_CHUNK_FILE_SIZE):(binaryChunkSize=parseInt((self._CHUNK_FILE_SIZE*(4/3)).toFixed(),10),chunkSize=self._CHUNK_FILE_SIZE);var throwTransferErrorFn=function(message){if(self._hasMCU)for(i=0;i<targetPeerList.length;i++){var peerId=targetPeerList[i];self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,dataInfo.transferId,peerId,{name:dataInfo.name,size:dataInfo.size,percentage:0,data:null,dataType:dataInfo.dataType,senderPeerId:self._user.sid,timeout:dataInfo.timeout,isPrivate:dataInfo.isPrivate},{message:message,transferType:self.DATA_TRANSFER_TYPE.UPLOAD})}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,dataInfo.transferId,targetPeerId,{name:dataInfo.name,size:dataInfo.size,percentage:0,data:null,dataType:dataInfo.dataType,senderPeerId:self._user.sid,timeout:dataInfo.timeout,isPrivate:dataInfo.isPrivate},{message:message,transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},startTransferFn=function(targetId,channel){if(!hasSend){hasSend=!0;var payload={type:self._DC_PROTOCOL_TYPE.WRQ,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,name:dataInfo.name,size:binarySize,dataType:dataInfo.dataType,chunkSize:binaryChunkSize,timeout:dataInfo.timeout,target:self._hasMCU?targetPeerList:targetPeerId,isPrivate:dataInfo.isPrivate};if(self._hasMCU){self._sendChannelData("MCU",channel,payload);try{var mainChannel=self._channels.MCU.main.id;self._setDataChannelTimeout("MCU",dataInfo.timeout,!0,mainChannel)}catch(error){log.error(["MCU","RTCDataChannel","MCU","Failed setting datachannel timeout for MCU"],error)}}else self._sendChannelData(targetId,channel,payload),self._setDataChannelTimeout(targetId,dataInfo.timeout,!0,channel)}};log.log([targetPeerId,"RTCDataChannel",targetChannel,"Chunk size of data:"],{chunkSize:chunkSize,binaryChunkSize:binaryChunkSize,transferId:dataInfo.transferId,dataType:dataInfo.dataType});var supportMulti=!1,peerAgent=(self._peerInformations[targetPeerId]||{}).agent||{};if(!peerAgent&&!peerAgent.name)return log.error([targetPeerId,"RTCDataChannel",targetChannel,"Aborting transfer to peer as peer agent information for peer does not exists"],dataInfo),void throwTransferErrorFn("Peer agent information for peer does not exists");if(-1===self._INTEROP_MULTI_TRANSFERS.indexOf(peerAgent.name)){if(targetChannel=targetPeerId+"-"+dataInfo.transferId,supportMulti=!0,!(self._channels[targetPeerId]||{}).main)return log.error([targetPeerId,"RTCDataChannel",targetChannel,"Main datachannel does not exists"],dataInfo),void throwTransferErrorFn("Main datachannel does not exists");self._createChannel(targetPeerId,targetChannel)}else{var ongoingTransfer=null;if(self._uploadDataSessions[targetChannel]?ongoingTransfer=self.DATA_TRANSFER_TYPE.UPLOAD:self._downloadDataSessions[targetChannel]&&(ongoingTransfer=self.DATA_TRANSFER_TYPE.DOWNLOAD),ongoingTransfer)return log.error([targetPeerId,"RTCDataChannel",targetChannel,"User have ongoing "+ongoingTransfer+" transfer session with peer. Unable to send data"],dataInfo),void throwTransferErrorFn("Another "+ongoingTransfer+" transfer is ongoing. Unable to send data.")}return"blob"===dataInfo.dataType?self._uploadDataTransfers[targetChannel]=self._chunkBlobData(data,chunkSize):self._uploadDataTransfers[targetChannel]=self._chunkDataURL(data,chunkSize),self._uploadDataSessions[targetChannel]={name:dataInfo.name,size:binarySize,isUpload:!0,senderPeerId:self._user.sid,transferId:dataInfo.transferId,percentage:0,timeout:dataInfo.timeout,chunkSize:chunkSize,dataType:dataInfo.dataType,isPrivate:dataInfo.isPrivate},supportMulti?self._condition("dataChannelState",function(){startTransferFn(targetPeerId,targetChannel)},function(){return self._channels[targetPeerId][targetChannel].readyState===self.DATA_CHANNEL_STATE.OPEN},function(state){return state===self.DATA_CHANNEL_STATE.OPEN}):startTransferFn(targetChannel,targetChannel),targetChannel},Skylink.prototype._dataChannelProtocolHandler=function(dataString,peerId,channelName,channelType){if(!(this._peerInformations[peerId]||{}).agent)return void log.error([peerId,"RTCDataChannel",channelName,"Peer informations is missing during protocol handling. Dropping packet"],dataString);if("string"==typeof dataString){var data={};try{data=JSON.parse(dataString)}catch(error){return log.debug([peerId,"RTCDataChannel",channelName,"Received from peer ->"],{type:"DATA",data:dataString}),void this._DATAProtocolHandler(peerId,dataString,this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,channelName)}switch(log.debug([peerId,"RTCDataChannel",channelName,"Received from peer ->"],{type:data.type,data:data}),data.type){case this._DC_PROTOCOL_TYPE.WRQ:this._WRQProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.ACK:this._ACKProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.ERROR:this._ERRORProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.CANCEL:this._CANCELProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.MESSAGE:this._MESSAGEProtocolHandler(peerId,data,channelName);break;default:log.error([peerId,"RTCDataChannel",channelName,"Unsupported message ->"],{type:data.type,data:data})}}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelName){var transferId=channelName+this._TRANSFER_DELIMITER+(new Date).getTime();log.log([peerId,"RTCDataChannel",channelName,"Received file request from peer:"],data);var name=data.name,binarySize=data.size,expectedSize=data.chunkSize,timeout=data.timeout;this._downloadDataSessions[channelName]={transferId:transferId,name:name,isUpload:!1,senderPeerId:peerId,size:binarySize,percentage:0,dataType:data.dataType,ackN:0,receivedSize:0,chunkSize:expectedSize,timeout:timeout,isPrivate:data.isPrivate},this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,peerId,{name:name,size:binarySize,percentage:0,data:null,dataType:data.dataType,senderPeerId:peerId,timeout:timeout,isPrivate:data.isPrivate}),this._trigger("incomingDataRequest",transferId,peerId,{name:name,size:binarySize,percentage:0,dataType:data.dataType,senderPeerId:peerId,timeout:timeout,isPrivate:data.isPrivate},!1)},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelName){var self=this,ackN=data.ackN,transferStatus=self._uploadDataSessions[channelName];if(!transferStatus)return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as upload data transfers is empty"],{status:transferStatus,data:data});if(!this._uploadDataTransfers[channelName])return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as upload data transfers array is missing"],{data:data});var chunksLength=self._uploadDataTransfers[channelName].length,transferId=transferStatus.transferId,timeout=transferStatus.timeout;if(self._clearDataChannelTimeout(peerId,!0,channelName),log.log([peerId,"RTCDataChannel",channelName,"ACK stage ("+transferStatus.transferId+") ->"],ackN+" / "+chunksLength),ackN>-1){if(chunksLength>ackN){var sendDataFn=function(base64BinaryString){var percentage=parseFloat(((ackN+1)/chunksLength*100).toFixed(2),10);return self._uploadDataSessions[channelName]?(self._uploadDataSessions[channelName].percentage=percentage,self._sendChannelData(peerId,channelName,base64BinaryString),self._setDataChannelTimeout(peerId,timeout,!0,channelName),void(100!==percentage&&self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:percentage,data:null,dataType:transferStatus.dataType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate}))):void log.error([peerId,"RTCDataChannel",channelName,"Failed uploading as data session is empty"],{status:transferStatus,data:data})};"blob"===transferStatus.dataType?self._blobToBase64(self._uploadDataTransfers[channelName][ackN],sendDataFn):sendDataFn(self._uploadDataTransfers[channelName][ackN])}else if(ackN===chunksLength){log.log([peerId,"RTCDataChannel",channelName,"Upload completed ("+transferStatus.transferId+")"],transferStatus),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:100,data:null,dataType:transferStatus.dataType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate});var blob=null;blob="blob"===transferStatus.dataType?new Blob(self._uploadDataTransfers[channelName]):self._assembleDataURL(self._uploadDataTransfers[channelName]),self._trigger("incomingData",blob,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:100,dataType:transferStatus.dataType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},!0),delete self._uploadDataTransfers[channelName],delete self._uploadDataSessions[channelName],self._channels[peerId]&&self._channels[peerId][channelName]&&(log.debug([peerId,"RTCDataChannel",channelName,"Closing datachannel for upload transfer"]),self._destroyChannel(peerId,channelName))}}else log.debug([peerId,"RTCDataChannel",channelName,"Upload rejected ("+transferStatus.transferId+")"],transferStatus),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:0,data:null,dataType:transferStatus.dataType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate}),delete self._uploadDataTransfers[channelName],delete self._uploadDataSessions[channelName],self._channels[peerId]&&self._channels[peerId][channelName]&&(log.debug([peerId,"RTCDataChannel",channelName,"Closing datachannel for upload transfer"]),self._destroyChannel(peerId,channelName))},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelName){var targetMid=data.sender;log.log([targetMid,"RTCDataChannel",channelName,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelName){var isUploader=data.isUploadError,transferStatus=isUploader?this._uploadDataSessions[channelName]:this._downloadDataSessions[channelName];if(!transferStatus)return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as "+(isUploader?"upload":"download")+" data session is empty"],data);var transferId=transferStatus.transferId;log.error([peerId,"RTCDataChannel",channelName,"Received an error from peer:"],data),this._clearDataChannelTimeout(peerId,isUploader,channelName),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:transferStatus.percentage,data:null,dataType:transferStatus.dataType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},{message:data.content,transferType:isUploader?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelName){var isUpload=!!this._uploadDataSessions[channelName],transferStatus=(!!this._downloadDataSessions[channelName],isUpload?this._uploadDataSessions[channelName]:this._downloadDataSessions[channelName]);if(!transferStatus)return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as "+(isUpload?"upload":"download")+" data session is empty"],data);var transferId=transferStatus.transferId;log.log([peerId,"RTCDataChannel",channelName,"Received file transfer cancel request:"],data),this._clearDataChannelTimeout(peerId,isUpload,channelName);try{isUpload?(delete this._uploadDataSessions[channelName],delete this._uploadDataTransfers[channelName]):(delete this._downloadDataSessions[channelName],delete this._downloadDataTransfers[channelName]),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.CANCEL,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,data:null,dataType:transferStatus.dataType,percentage:transferStatus.percentage,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},{message:data.content,transferType:isUpload?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD}),log.log([peerId,"RTCDataChannel",channelName,"Emptied file transfer session:"],data)}catch(error){this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,data:null,dataType:transferStatus.dataType,percentage:transferStatus.percentage,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},{message:"Failed cancelling data request from peer",transferType:isUpload?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD}),log.error([peerId,"RTCDataChannel",channelName,"Failed emptying file transfer session:"],{data:data,error:error})}},Skylink.prototype._DATAProtocolHandler=function(peerId,dataString,dataType,channelName){var chunk,error="",transferStatus=this._downloadDataSessions[channelName];if(log.log([peerId,"RTCDataChannel",channelName,"Received data chunk from peer ->"],{dataType:dataType,data:dataString,type:"DATA"}),!transferStatus)return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as download data session is empty"],{dataType:dataType,data:dataString,type:"DATA"});if(!this._downloadDataTransfers[channelName])return void log.error([peerId,"RTCDataChannel",channelName,"Ignoring data received as download data transfers array is missing"],{dataType:dataType,data:dataString,type:"DATA"});var transferId=transferStatus.transferId,dataTransferType=transferStatus.dataType,receivedSize=0;if(this._clearDataChannelTimeout(peerId,!1,channelName),dataType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING)"blob"===dataTransferType?(chunk=this._base64ToBlob(dataString),receivedSize=chunk.size*(4/3)):(chunk=dataString,receivedSize=dataString.length);else if(dataType===this.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER)chunk=new Blob(dataString);else{if(dataType!==this.DATA_TRANSFER_DATA_TYPE.BLOB)return error="Unhandled data exception: "+dataType,log.error([peerId,"RTCDataChannel",channelName,"Failed downloading data packets:"],{dataType:dataType,data:dataString,type:"DATA",error:error}),void this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:transferStatus.percentage,data:null,dataType:dataTransferType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},{message:error,transferType:this.DATA_TRANSFER_TYPE.DOWNLOAD});chunk=dataString}if(log.log([peerId,"RTCDataChannel",channelName,"Received and expected data chunk size ("+receivedSize+" === "+transferStatus.chunkSize+")"],{dataType:dataType,data:dataString,receivedSize:receivedSize,expectedSize:transferStatus.chunkSize,type:"DATA"}),transferStatus.chunkSize>=receivedSize){this._downloadDataTransfers[channelName].push(chunk),transferStatus.ackN+=1,transferStatus.receivedSize+=receivedSize;var totalReceivedSize=transferStatus.receivedSize,percentage=parseFloat((totalReceivedSize/transferStatus.size*100).toFixed(2),10);if(this._sendChannelData(peerId,channelName,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:transferStatus.ackN}),this._downloadDataSessions[channelName].percentage=percentage,
transferStatus.chunkSize===receivedSize&&100>percentage){if(log.log([peerId,"RTCDataChannel",channelName,"Transfer in progress ACK n ("+transferStatus.ackN+")"],{dataType:dataType,data:dataString,ackN:transferStatus.ackN,type:"DATA"}),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOADING,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:percentage,data:null,dataType:dataTransferType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate}),this._setDataChannelTimeout(peerId,transferStatus.timeout,!1,channelName),!this._downloadDataSessions[channelName])return void log.error([peerId,"RTCDataChannel",channelName,"Failed downloading as data session is empty"],{dataType:dataType,data:dataString,type:"DATA"});this._downloadDataSessions[channelName].info=transferStatus}else{log.log([peerId,"RTCDataChannel",channelName,"Download complete"],{dataType:dataType,data:dataString,type:"DATA",transferInfo:transferStatus});var blob=null;blob="blob"===dataTransferType?new Blob(this._downloadDataTransfers[channelName]):this._assembleDataURL(this._downloadDataTransfers[channelName]),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:100,data:blob,dataType:dataTransferType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate}),this._trigger("incomingData",blob,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:100,dataType:dataTransferType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},!1),delete this._downloadDataTransfers[channelName],delete this._downloadDataSessions[channelName],log.log([peerId,"RTCDataChannel",channelName,"Converted to Blob as download"],{dataType:dataType,data:dataString,type:"DATA",transferInfo:transferStatus}),this._channels[peerId]&&this._channels[peerId][channelName]&&(log.debug([peerId,"RTCDataChannel",channelName,"Closing datachannel for download transfer"]),this._destroyChannel(peerId,channelName))}}else error="Packet not match - [Received]"+receivedSize+" / [Expected]"+transferStatus.chunkSize,this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,{name:transferStatus.name,size:transferStatus.size,percentage:transferStatus.percentage,data:null,dataType:dataTransferType,senderPeerId:transferStatus.senderPeerId,timeout:transferStatus.timeout,isPrivate:transferStatus.isPrivate},{message:error,transferType:this.DATA_TRANSFER_TYPE.DOWNLOAD}),log.error([peerId,"RTCDataChannel",channelName,"Failed downloading data packets:"],{dataType:dataType,data:dataString,type:"DATA",transferInfo:transferStatus,error:error})},Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,callback){var errorMsg,errorPayload,i,peerId,listOfPeers=Object.keys(this._peerConnections),isPrivate=!1,dataInfo={},transferId=this._user.sid+this.DATA_TRANSFER_TYPE.UPLOAD+(new Date).toISOString().replace(/-/g,"").replace(/:/g,"").replace(".",""),singleError=null,transferErrors={},stateError=null,singlePeerId=null;if("function"==typeof timeout?callback=timeout:"string"==typeof timeout?(listOfPeers=[timeout],isPrivate=!0):Array.isArray(timeout)&&(listOfPeers=timeout,isPrivate=!0),"function"==typeof targetPeerId?callback=targetPeerId:Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!("object"==typeof data&&data instanceof Blob)){if(errorMsg="Provided data is not a Blob data",0===listOfPeers.length)transferErrors.self=errorMsg;else{for(i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],transferErrors[peerId]=errorMsg;1===listOfPeers.length&&isPrivate&&(stateError=self.DATA_TRANSFER_STATE.ERROR,singleError=errorMsg,singlePeerId=listOfPeers[0])}return errorPayload={state:stateError,error:singleError,transferId:transferId,peerId:singlePeerId,listOfPeers:listOfPeers,transferErrors:transferErrors,transferInfo:dataInfo,isPrivate:isPrivate},log.error(errorMsg,errorPayload),void("function"==typeof callback&&(log.log([null,"RTCDataChannel",null,"Error occurred. Firing callback with error -> "],errorPayload),callback(errorPayload,null)))}if(dataInfo.name=data.name||transferId,dataInfo.size=data.size,dataInfo.timeout="number"==typeof timeout?timeout:60,dataInfo.transferId=transferId,dataInfo.dataType="blob",dataInfo.isPrivate=isPrivate,!this._enableDataChannel){if(errorMsg="Unable to send any blob data. Datachannel is disabled",0===listOfPeers.length)transferErrors.self=errorMsg;else{for(i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],transferErrors[peerId]=errorMsg;1===listOfPeers.length&&isPrivate&&(stateError=self.DATA_TRANSFER_STATE.ERROR,singleError=errorMsg,singlePeerId=listOfPeers[0])}return errorPayload={state:stateError,error:singleError,transferId:transferId,peerId:singlePeerId,listOfPeers:listOfPeers,transferErrors:transferErrors,transferInfo:dataInfo,isPrivate:isPrivate},log.error(errorMsg,errorPayload),void("function"==typeof callback&&(log.log([null,"RTCDataChannel",null,"Error occurred. Firing callback with error -> "],errorPayload),callback(errorPayload,null)))}this._startDataTransfer(data,dataInfo,listOfPeers,callback)},Skylink.prototype._startDataTransfer=function(data,dataInfo,listOfPeers,callback){var i,peerId,self=this,error="",noOfPeersSent=0,transferId=dataInfo.transferId,dataType=dataInfo.dataType,isPrivate=dataInfo.isPrivate,listOfPeersTransferState={},transferSuccess=!0,listOfPeersTransferErrors={},listOfPeersChannels={},successfulPeerTransfers=[],triggerCallbackFn=function(){for(i=0;i<listOfPeers.length;i++){var transferPeerId=listOfPeers[i];if(!listOfPeersTransferState[transferPeerId]){transferSuccess=!1;break}}transferSuccess?(log.log([null,"RTCDataChannel",transferId,"Firing success callback for data transfer"],dataInfo),1===listOfPeers.length&&isPrivate?callback(null,{state:self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,peerId:listOfPeers[0],listOfPeers:listOfPeers,transferId:transferId,isPrivate:isPrivate,transferInfo:dataInfo}):callback(null,{state:null,peerId:null,transferId:transferId,listOfPeers:listOfPeers,isPrivate:isPrivate,transferInfo:dataInfo})):(log.log([null,"RTCDataChannel",transferId,"Firing failure callback for data transfer"],dataInfo),1===listOfPeers.length&&isPrivate?callback({state:self.DATA_TRANSFER_STATE.ERROR,error:listOfPeersTransferErrors[listOfPeers[0]],peerId:listOfPeers[0],transferId:transferId,transferErrors:listOfPeersTransferErrors,transferInfo:dataInfo,isPrivate:isPrivate,listOfPeers:listOfPeers},null):callback({state:null,peerId:null,error:null,transferId:transferId,listOfPeers:listOfPeers,isPrivate:isPrivate,transferInfo:dataInfo,transferErrors:listOfPeersTransferErrors},null))};for(i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],"MCU"!==peerId&&(self._channels[peerId]&&self._channels[peerId].main?(log.log([peerId,"RTCDataChannel",null,"Sending blob data ->"],dataInfo),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,peerId,{name:dataInfo.name,size:dataInfo.size,percentage:0,data:data,dataType:dataType,senderPeerId:self._user.sid,timeout:dataInfo.timeout,isPrivate:isPrivate}),self._trigger("incomingDataRequest",transferId,peerId,{name:dataInfo.name,size:dataInfo.size,percentage:0,dataType:dataType,senderPeerId:self._user.sid,timeout:dataInfo.timeout,isPrivate:isPrivate},!0),self._hasMCU?listOfPeersChannels[peerId]=self._channels[peerId].main.id:listOfPeersChannels[peerId]=self._sendBlobDataToPeer(data,dataInfo,peerId),noOfPeersSent++):(error="Datachannel does not exist. Unable to start data transfer with peer",log.error([peerId,"RTCDataChannel",null,error]),listOfPeersTransferErrors[peerId]=error));if(self._hasMCU&&self._sendBlobDataToPeer(data,dataInfo,listOfPeers,isPrivate,transferId),0===noOfPeersSent){for(error="Failed sending data as there is no available datachannels to send data",i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,{name:dataInfo.name,size:dataInfo.size,data:null,dataType:dataType,percentage:0,senderPeerId:self._user.sid,timeout:dataInfo.timeout,isPrivate:isPrivate},{message:error,transferType:self.DATA_TRANSFER_TYPE.UPLOAD}),listOfPeersTransferErrors[peerId]=error;return log.error([null,"RTCDataChannel",null,error]),self._uploadDataTransfers=[],self._uploadDataSessions=[],transferSuccess=!1,void("function"==typeof callback&&triggerCallbackFn())}if("function"==typeof callback){var dataChannelStateFn=function(state,transferringPeerId,errorObj,channelName,channelType){state===self.DATA_CHANNEL_STATE.ERROR&&state===self.DATA_CHANNEL_STATE.CLOSED&&listOfPeersChannels[peerId]===channelName&&-1===successfulPeerTransfers.indexOf(transferringPeerId)&&(listOfPeersTransferState[transferringPeerId]=!1,listOfPeersTransferErrors[transferringPeerId]=errorObj,log.error([transferringPeerId,"RTCDataChannel",null,"Data channel state has met a failure state for peer (datachannel) ->"],{state:state,error:errorObj})),Object.keys(listOfPeersTransferState).length===listOfPeers.length&&(self.off("dataTransferState",dataTransferStateFn),self.off("dataChannelState",dataChannelStateFn),log.log([null,"RTCDataChannel",transferId,"Transfer states have been gathered completely in dataChannelState"],state),triggerCallbackFn())},dataTransferStateFn=function(state,stateTransferId,transferringPeerId,transferInfo,errorObj){stateTransferId===transferId&&(state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?(log.debug([transferringPeerId,"RTCDataChannel",stateTransferId,"Data transfer state has met a success state for peer ->"],state),-1===successfulPeerTransfers.indexOf(transferringPeerId)&&(listOfPeersTransferState[transferringPeerId]=!0)):(state===self.DATA_TRANSFER_STATE.REJECTED||state===self.DATA_TRANSFER_STATE.CANCEL||state===self.DATA_TRANSFER_STATE.ERROR)&&(state===self.DATA_TRANSFER_STATE.REJECTED&&(errorObj=new Error("Peer has rejected data transfer request")),log.error([transferringPeerId,"RTCDataChannel",stateTransferId,"Data transfer state has met a failure state for peer ->"],{state:state,error:errorObj}),-1===successfulPeerTransfers.indexOf(transferringPeerId)&&(listOfPeersTransferState[transferringPeerId]=!1,listOfPeersTransferErrors[transferringPeerId]=errorObj))),Object.keys(listOfPeersTransferState).length===listOfPeers.length&&(self.off("dataTransferState",dataTransferStateFn),self.off("dataChannelState",dataChannelStateFn),log.log([null,"RTCDataChannel",stateTransferId,"Transfer states have been gathered completely in dataTransferState"],state),triggerCallbackFn())};self.on("dataTransferState",dataTransferStateFn),self.on("dataChannelState",dataChannelStateFn)}},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){if("string"!=typeof transferId&&"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",null,"Aborting accept data transfer as transfer ID and peer ID is not provided"],{accept:accept,peerId:peerId,transferId:transferId});if(-1===transferId.indexOf(this._TRANSFER_DELIMITER))return void log.error([peerId,"RTCDataChannel",null,"Aborting accept data transfer as invalid transfer ID is provided"],{accept:accept,transferId:transferId});var channelName=transferId.split(this._TRANSFER_DELIMITER)[0];if(accept){if(log.info([peerId,"RTCDataChannel",channelName,"User accepted peer's request"],{accept:accept,transferId:transferId}),!this._peerInformations[peerId]&&!this._peerInformations[peerId].agent)return void log.error([peerId,"RTCDataChannel",channelName,"Aborting accept data transfer as Peer informations for peer is missing"],{accept:accept,transferId:transferId});this._downloadDataTransfers[channelName]=[];var data=this._downloadDataSessions[channelName];this._sendChannelData(peerId,channelName,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:0,agent:window.webrtcDetectedBrowser}),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,data.transferId,peerId,{name:data.name,size:data.size,data:null,dataType:data.dataType,percentage:0,senderPeerId:peerId,timeout:data.timeout,isPrivate:data.isPrivate})}else log.info([peerId,"RTCDataChannel",channelName,"User rejected peer's request"],{accept:accept,transferId:transferId}),this._sendChannelData(peerId,channelName,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:-1}),delete this._downloadDataSessions[channelName],delete this._downloadDataTransfers[channelName]},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var data,channelName=peerId+"-"+transferId;if(transferId.indexOf(this._TRANSFER_DELIMITER)>0)channelName=transferId.split(this._TRANSFER_DELIMITER)[0];else{var peerAgent=(this._peerInformations[peerId]||{}).agent;if(!peerAgent&&!peerAgent.name)return void log.error([peerId,"RTCDataChannel",null,"Cancel transfer to peer failed as peer agent information for peer does not exists"],transferId);self._INTEROP_MULTI_TRANSFERS.indexOf(peerAgent.name)>-1&&(channelName=peerId)}if(this._uploadDataSessions[channelName])data=this._uploadDataSessions[channelName],delete this._uploadDataSessions[channelName],delete this._uploadDataTransfers[channelName],this._sendChannelData(peerId,channelName,{type:this._DC_PROTOCOL_TYPE.CANCEL,sender:this._user.sid,name:data.name,content:"Peer cancelled upload transfer"}),log.debug([peerId,"RTCDataChannel",channelName,"Cancelling upload data transfers"],transferId);else{if(!this._downloadDataSessions[channelName])return void log.error([peerId,"RTCDataChannel",null,"Cancel transfer to peer failed as transfer session with peer does not exists"],transferId);data=this._downloadDataSessions[channelName],delete this._downloadDataSessions[channelName],delete this._downloadDataTransfers[channelName],this._sendChannelData(peerId,channelName,{type:this._DC_PROTOCOL_TYPE.CANCEL,sender:this._user.sid,name:data.name,content:"Peer cancelled download transfer"}),log.debug([peerId,"RTCDataChannel",channelName,"Cancelling download data transfers"],transferId)}this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.CANCEL,data.transferId,peerId,{name:data.name,size:data.size,percentage:data.percentage,data:null,dataType:data.dataType,senderPeerId:data.senderPeerId,timeout:data.timeout,isPrivate:data.isPrivate})},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var self=this;if(!self._enableDataChannel)return void log.warn("Unable to send any P2P message. Datachannel is disabled");var listOfPeers=Object.keys(self._channels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),self._hasMCU)isPrivate?(log.log(["MCU",null,null,"Relaying private P2P message to peers"],listOfPeers),self._sendChannelData("MCU","main",{type:self._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:self._user.sid,target:listOfPeers,data:message})):(log.log(["MCU",null,null,"Relaying P2P message to peers"]),self._sendChannelData("MCU","main",{type:self._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:self._user.sid,target:"MCU",data:message}));else for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i],useChannel=self._hasMCU?"MCU":peerId;"MCU"!==peerId&&(log.log([peerId,null,useChannel,"Sending P2P message to peer"]),self._sendChannelData(useChannel,"main",{type:self._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:self._user.sid,target:peerId,data:message}))}self._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,isDataChannel:!0,senderPeerId:self._user.sid},self._user.sid,self.getPeerInfo(),!0)},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){var errorMsg,errorPayload,i,peerId,listOfPeers=Object.keys(this._peerConnections),isPrivate=!1,dataInfo={},transferId=this._user.sid+this.DATA_TRANSFER_TYPE.UPLOAD+(new Date).toISOString().replace(/-/g,"").replace(/:/g,"").replace(".",""),singleError=null,transferErrors={},stateError=null,singlePeerId=null;if("function"==typeof timeout?callback=timeout:"string"==typeof timeout?(listOfPeers=[timeout],isPrivate=!0):Array.isArray(timeout)&&(listOfPeers=timeout,isPrivate=!0),"function"==typeof targetPeerId?callback=targetPeerId:Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),"string"!=typeof data){if(errorMsg="Provided data is not a dataURL",0===listOfPeers.length)transferErrors.self=errorMsg;else{for(i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],transferErrors[peerId]=errorMsg;1===listOfPeers.length&&isPrivate&&(stateError=self.DATA_TRANSFER_STATE.ERROR,singleError=errorMsg,singlePeerId=listOfPeers[0])}return errorPayload={state:stateError,error:singleError,transferId:transferId,peerId:singlePeerId,listOfPeers:listOfPeers,transferErrors:transferErrors,transferInfo:dataInfo,isPrivate:isPrivate},log.error(errorMsg,errorPayload),void("function"==typeof callback&&(log.log([null,"RTCDataChannel",null,"Error occurred. Firing callback with error -> "],errorPayload),callback(errorPayload,null)))}if(dataInfo.name=data.name||transferId,dataInfo.size=data.size||data.length,dataInfo.timeout="number"==typeof timeout?timeout:60,dataInfo.transferId=transferId,dataInfo.dataType="dataURL",dataInfo.isPrivate=isPrivate,!this._enableDataChannel){if(errorMsg="Unable to send any dataURL. Datachannel is disabled",0===listOfPeers.length)transferErrors.self=errorMsg;else{for(i=0;i<listOfPeers.length;i++)peerId=listOfPeers[i],transferErrors[peerId]=errorMsg;1===listOfPeers.length&&isPrivate&&(stateError=self.DATA_TRANSFER_STATE.ERROR,singleError=errorMsg,singlePeerId=listOfPeers[0])}return errorPayload={state:stateError,error:singleError,transferId:transferId,peerId:singlePeerId,listOfPeers:listOfPeers,transferErrors:transferErrors,transferInfo:dataInfo,isPrivate:isPrivate},log.error(errorMsg,errorPayload),void("function"==typeof callback&&(log.log([null,"RTCDataChannel",null,"Error occurred. Firing callback with error -> "],errorPayload),callback(errorPayload,null)))}this._startDataTransfer(data,dataInfo,listOfPeers,callback)};var SkylinkEvent={on:function(event,callback){return this.listeners.on[event]=this.listeners.on[event]||[],this.listeners.on[event].push(callback),this},off:function(event,callback){return"undefined"==typeof event&&(this.listeners.on={},this.listeners.once={}),"undefined"==typeof callback?(this.listeners.on[event]=[],this.listeners.once[event]=[]):(this.listeners.on[event]&&this._removeListener(this.listeners.on[event],callback),this.listeners.once[event]&&this._removeListener(this.listeners.once[event],callback)),this},once:function(event,callback,condition){return this.listeners.once[event]=this.listeners.once[event]||[],"function"!=typeof condition&&(condition=function(){return!0}),this.listeners.once[event].push([callback,condition]),this},_trigger:function(event){var args=Array.prototype.slice.call(arguments,1);if(this.listeners.on[event])for(var i=0;i<this.listeners.on[event].length;i++)this.listeners.on[event][i].apply(this,args);if(this.listeners.once[event])for(var j=0;j<this.listeners.once[event].length;j++)this.listeners.once[event][j][1].apply(this,args)&&(this.listeners.once[event][j][0].apply(this,args),this.listeners.once[event].splice(j,1),j--);return this},_removeListener:function(listeners,listener){for(var i=0;i<listeners.length;i++){var listenerIndex=listeners[i];if(Array.isArray(listenerIndex)&&(listenerIndex=listeners[i][0]),listenerIndex===listener)return void listeners.splice(i,1)}},_mixin:function(object){for(var methods=["on","off","once","_trigger","_removeListener"],i=0;i<methods.length;i++)SkylinkEvent.hasOwnProperty(methods[i])&&("function"==typeof object?object.prototype[methods[i]]=SkylinkEvent[methods[i]]:object[methods[i]]=SkylinkEvent[methods[i]]);return object.listeners={on:{},once:{}},object}};Skylink.prototype._peerCandidatesQueue={},Skylink.prototype._peerIceTrickleDisabled={},Skylink.prototype._addedCandidates={},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype._onIceCandidate=function(targetMid,event){var self=this;if(event.candidate){if(self._enableIceTrickle&&!self._peerIceTrickleDisabled[targetMid]){var messageCan=event.candidate.candidate.split(" "),candidateType=messageCan[7];log.debug([targetMid,"RTCIceCandidate",null,"Created and sending "+candidateType+" candidate:"],event),self._socket.send({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:event.candidate.sdpMLineIndex,id:event.candidate.sdpMid,candidate:event.candidate.candidate,mid:self._user.sid,target:targetMid,rid:self._room.id}),self._addedCandidates[targetMid]||(self._addedCandidates[targetMid]={relay:[],host:[],srflx:[]}),self._addedCandidates[targetMid][candidateType]||(self._addedCandidates[targetMid][candidateType]=[]),self._addedCandidates[targetMid][candidateType].push("local:"+messageCan[4]+("0"!==messageCan[5]?":"+messageCan[5]:"")+(messageCan[2]?"?transport="+messageCan[2].toLowerCase():""))}}else if(log.debug([targetMid,"RTCIceCandidate",null,"End of gathering"]),self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),!self._enableIceTrickle||self._peerIceTrickleDisabled[targetMid]){var sessionDescription=self._peerConnections[targetMid].localDescription;sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=self._addSDPSsrcFirefoxAnswer(targetMid,sessionDescription.sdp)),self._socket.send({type:sessionDescription.type,sdp:sessionDescription.sdp,mid:self._user.sid,agent:window.webrtcDetectedBrowser,target:targetMid,rid:self._room.id})}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,candidate){log.debug([targetMid,null,null,"Queued candidate to add after setRemoteDescription"],candidate),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push(candidate)},Skylink.prototype._onAddIceCandidateSuccess=function(){log.debug([null,"RTCICECandidate",null,"Successfully added ICE candidate"])},Skylink.prototype._onAddIceCandidateFailure=function(error){log.error([null,"RTCICECandidate",null,"Error"],error)},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){if(this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].length>0){for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var candidate=this._peerCandidatesQueue[targetMid][i];log.debug([targetMid,null,null,"Added queued candidate"],candidate),this._peerConnections[targetMid].addIceCandidate(candidate,this._onAddIceCandidateSuccess,this._onAddIceCandidateFailure)}delete this._peerCandidatesQueue[targetMid]}else log.log([targetMid,null,null,"No queued candidates to add"])},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype._enableIceTrickle=!0,Skylink.prototype._enableSTUN=!0,Skylink.prototype._enableTURN=!0,Skylink.prototype._usePublicSTUN=!0,Skylink.prototype._TURNTransport="any",Skylink.prototype._ICEConnectionFailures={},Skylink.prototype._setIceServers=function(givenConfig){var givenIceServers=clone(givenConfig.iceServers),iceServersList={},newIceServers=[],useTURNSSLProtocol=!1,useTURNSSLPort=!1;("https:"===window.location.protocol||this._forceTURNSSL)&&("chrome"===window.webrtcDetectedBrowser||"safari"===window.webrtcDetectedBrowser||"IE"===window.webrtcDetectedBrowser?(useTURNSSLProtocol=!0,useTURNSSLPort=!1):useTURNSSLPort=!0),log.log("TURN server connections SSL configuration",{useTURNSSLProtocol:useTURNSSLProtocol,useTURNSSLPort:useTURNSSLPort});var i,pushIceServer=function(username,credential,url,index){iceServersList[username]||(iceServersList[username]={}),iceServersList[username][credential]||(iceServersList[username][credential]=[]),-1===iceServersList[username][credential].indexOf(url)&&("number"==typeof index?iceServersList[username][credential].splice(index,0,url):iceServersList[username][credential].push(url))};for(i=0;i<givenIceServers.length;i++){var server=givenIceServers[i];if("string"==typeof server.url){if(0===server.url.indexOf("stun")){if(!this._enableSTUN){log.warn("Ignoring STUN server provided at index "+i,clone(server));continue}if(!this._usePublicSTUN&&-1===server.url.indexOf("temasys")){log.warn("Ignoring public STUN server provided at index "+i,clone(server));continue}}else if(0===server.url.indexOf("turn")){if(!this._enableTURN){log.warn("Ignoring TURN server provided at index "+i,clone(server));continue}if(-1===server.url.indexOf(":443")&&useTURNSSLPort){log.log("Ignoring TURN Server (non-SSL port) provided at index "+i,clone(server));continue}if(useTURNSSLProtocol){var parts=server.url.split(":");parts[0]="turns",server.url=parts.join(":")}}if(server.url.indexOf("@")>0){var protocolParts=server.url.split(":"),urlParts=protocolParts[1].split("@");server.username=urlParts[0],server.url=protocolParts[0]+":"+urlParts[1],protocolParts[2]&&(server.url+=":"+protocolParts[2])}var username="string"==typeof server.username?server.username:"none",credential="string"==typeof server.credential?server.credential:"none";if(0===server.url.indexOf("turn"))if(this._TURNTransport===this.TURN_TRANSPORT.ANY)pushIceServer(username,credential,server.url);else{var rawUrl=server.url;if(rawUrl.indexOf("?transport=")>0&&(rawUrl=rawUrl.split("?transport=")[0]),this._TURNTransport===this.TURN_TRANSPORT.NONE)pushIceServer(username,credential,rawUrl);else if(this._TURNTransport===this.TURN_TRANSPORT.UDP)pushIceServer(username,credential,rawUrl+"?transport=udp");else if(this._TURNTransport===this.TURN_TRANSPORT.TCP)pushIceServer(username,credential,rawUrl+"?transport=tcp");else{if(this._TURNTransport!==this.TURN_TRANSPORT.ALL){log.warn('Invalid TURN transport option "'+this._TURNTransport+'". Ignoring TURN server at index'+i,clone(server));continue}pushIceServer(username,credential,rawUrl+"?transport=tcp"),pushIceServer(username,credential,rawUrl+"?transport=udp")}}else pushIceServer(username,credential,server.url)}else log.warn("Ignoring ICE server provided at index "+i,clone(server))}this._enableSTUN&&this._usePublicSTUN&&"firefox"===window.webrtcDetectedBrowser&&pushIceServer("none","none","stun:stun.services.mozilla.com",0);var hasUrlsSupport=!1;"chrome"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>34&&(hasUrlsSupport=!0),"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>38&&(hasUrlsSupport=!0),"opera"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>31&&(hasUrlsSupport=!0),("safari"===window.webrtcDetectedBrowser||"IE"===window.webrtcDetectedBrowser)&&(hasUrlsSupport=!0);for(var serverUsername in iceServersList)if(iceServersList.hasOwnProperty(serverUsername))for(var serverCred in iceServersList[serverUsername])if(iceServersList[serverUsername].hasOwnProperty(serverCred))if(hasUrlsSupport){var urlsItem={urls:iceServersList[serverUsername][serverCred]};"none"!==serverUsername&&(urlsItem.username=serverUsername),"none"!==serverCred&&(urlsItem.credential=serverCred),newIceServers.push(urlsItem)}else for(var j=0;j<iceServersList[serverUsername][serverCred].length;j++){var urlItem={url:iceServersList[serverUsername][serverCred][j]};"none"!==serverUsername&&(urlItem.username=serverUsername),"none"!==serverCred&&(urlItem.credential=serverCred),newIceServers.push(urlItem)}return log.log("Output iceServers configuration:",newIceServers),{iceServers:newIceServers}},Skylink.prototype.generateUUID=function(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"==c?r:7&r|8).toString(16)});return uuid},Skylink.prototype.refreshConnection=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestarts=[],error="",listOfPeerRestartErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId),0===listOfPeers.length)return error="There is currently no peer connections to restart",log.warn([null,"PeerConnection",null,error]),listOfPeerRestartErrors.self=new Error(error),void("function"==typeof callback&&callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null));var refreshSinglePeerCallback=function(peerId){return function(error,success){-1===listOfPeerRestarts.indexOf(peerId)&&(error&&(log.error([peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error),listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(log.log([null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))}},refreshSinglePeer=function(peerId,peerCallback){if(!self._peerConnections[peerId])return error="There is currently no existing peer connection made with the peer. Unable to restart connection",log.error([peerId,null,null,error]),void(listOfPeerRestartErrors[peerId]=new Error(error));var now=Date.now()||function(){return+new Date};return now-self.lastRestart<3e3?(error="Last restart was so tight. Aborting.",log.error([peerId,null,null,error]),void(listOfPeerRestartErrors[peerId]=new Error(error))):(log.log([peerId,"PeerConnection",null,"Restarting peer connection"]),void self._restartPeerConnection(peerId,!0,!1,peerCallback,!0))},toRefresh=function(){if(self._hasMCU)self._restartMCUConnection(callback);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",log.error([peerId,"PeerConnection",null,error]),listOfPeerRestartErrors[peerId]=new Error(error)),i===listOfPeers.length-1&&Object.keys(listOfPeerRestartErrors).length>0&&"function"==typeof callback&&callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}};self._throttle(toRefresh,5e3)()},SkylinkPeer.prototype.id=null,SkylinkPeer.prototype.agent={name:null,version:null,os:null},SkylinkPeer.prototype.data=null,SkylinkPeer.prototype.stream=null,SkylinkPeer.prototype._connection={recvonly:!1,datachannel:!0,trickleICE:!0,stereo:!0,bandwidth:{},iceServers:[]},SkylinkPeer.prototype._health={healthy:!1,retries:0,failures:0,timer:null},SkylinkPeer.prototype._peer=null,SkylinkPeer.prototype._channels={},SkylinkPeer.prototype._candidates={incoming:{queue:[],success:[],failure:[]},outgoing:[],complete:!1},SkylinkPeer.prototype.connect=function(){var self=this,RTCConfiguration={iceServers:self._connection.iceServers},RTCOptional={optional:[{DtlsSrtpKeyAgreement:!0}]};log.debug([self.id,"Peer",null,"Constructing RTCPeerConnection object ->"],{RTCConfiguration:RTCConfiguration,RTCOptional:RTCOptional}),self._connection.trickleICE||log.warn([self.id,"Peer",null,"Trickle ICE has been disabled for this connection and this may result in a slower connection establishment"]),self._connection.datachannel||log.warn([self.id,"Peer",null,"Datachannel functionalities is disabled"]),self._peer=new RTCPeerConnection(RTCConfiguration,RTCOptional),self._peer.ondatachannel=function(event){
var channel=event.channel||event;log.debug([self.id,"Peer",channel.label,"Received RTCDataChannel ->"],channel)},self._peer.onaddstream=function(event){var stream=event.stream||event,timeout=0;"firefox"===self.agent.name&&"firefox"!==user.agent.name&&(timeout=1500),setTimeout(function(){log.debug([self.id,"Peer",stream.id,"Received MediaStream ->"],stream),self._trigger("stream",stream)},timeout)},self._peer.onicecandidate=function(event){var candidate=event.candidate||event;if(candidate.candidate){var candidateId=candidate.candidate.split(" ")[0];log.debug([self.id,"Peer",candidateId,"Generated RTCIceCandidate ->"],candidate),self._candidates.outgoing.push(candidate),self._trigger("candidate",candidate)}else log.log([self.id,"Peer",null,"Generation of RTCIceCandidates has completed"]),self._candidates.complete=!0,!self._connection.trickleICE&&self._peer.localDescription&&self._peer.localDescription.type&&(log.debug([self.id,"Peer",null,"Connection handshake may proceeed now"]),self._trigger(self._peer.localDescription.type,self._peer.localDescription))},self._peer.oniceconnectionstatechange=function(){log.debug([self.id,"Peer",null,"Current iceConnectionState ->"],self._peer.iceConnectionState),self._trigger("iceConnectionState",self._peer.iceConnectionState),"failed"===self._peer.iceConnectionState?(self._health.failures++,3===self._health.failures&&self._connection.trickleICE?(self._trigger("iceConnectionState","trickleFailed"),self._connection.trickleICE=!1,self._handshakeRestart(!0,!1)):self._handshakeRestart(!1,!0)):["connected","completed"].indexOf(self._peer.iceConnectionState)>-1&&(self._health.healthy=!0)},self._peer.onsignalingstatechange=function(){log.debug([self.id,"Peer",null,"Current signalingState ->"],self._peer.signalingState),self._trigger("signalingState",self._peer.signalingState)},self._peer.onicegatheringstatechange=function(){log.debug([self.id,"Peer",null,"Current iceGatheringState ->"],self._peer.iceGatheringState),self._trigger("iceGatheringState",self._peer.iceGatheringState)},log.log([self.id,"Peer",null,"Listenting to RTCPeerConnection object events"]),self._monitorHealth()},SkylinkPeer.prototype._setLocalDescription=function(sessionDescription){var self=this;if(!self._peer)return void log.warn([self.id,"Peer",null,"Ignoring local description as peer object is not initialized"]);if("offer"===sessionDescription.type){if("stable"!==self._peer.signalingState)return void log.warn([self.id,"Peer",null,'Ignoring local description as state is not "stable" ->'],self._peer.signalingState)}else if("have-remote-offer"!==self._peer.signalingState)return void log.warn([self.id,"Peer",null,'Ignoring local description as state is not "have-remote-offer" ->'],self._peer.signalingState);log.debug([self.id,"Peer",null,"Setting local "+sessionDescription.type+" ->"],sessionDescription),self._peer.setLocalDescription(sessionDescription,function(){return log.log([self.id,"Peer",null,"Local "+sessionDescription.type+" has been set"]),self._trigger("handshakeProgress",sessionDescription.type,null),self._connection.trickleICE||self._candidates.complete?void self._trigger(sessionDescription.type,sessionDescription):void log.debug([self.id,"Peer",null,"Awaiting for all ICE candidates to complete generation"])},function(error){log.error([self.id,"Peer",null,"Failed setting local "+sessionDescription.type+" ->"],error),self._trigger("handshakeProgress","error",error)})},SkylinkPeer.prototype._setRemoteDescription=function(sessionDescription,callback){var self=this;log.debug([self.id,"Peer",null,"Setting remote "+sessionDescription.type+" ->"],sessionDescription),self._peer.setRemoteDescription(sessionDescription,function(){log.debug([self.id,"Peer",null,"Remote "+sessionDescription.type+" has been set"]),self._trigger("handshakeProgress",sessionDescription.type,null);for(var c=0;c<self._candidates.incoming.queue.length;c++)self.addCandidate(self._candidates.incoming.queue[c]);self._candidates.incoming.queue=[],callback()},function(error){log.error([self.id,"Peer",null,"Failed setting remote "+sessionDescription.type+" ->"],error),self._trigger("handshakeProgress","error",error)})},SkylinkPeer.prototype._monitorHealth=function(){var self=this,timeout=1e4;self._health.timer=setTimeout(function(){},timeout)},SkylinkPeer.prototype._handshakeRestart=function(hardRestart,restartIce){var self=this;if(hardRestart)self.disconnect(),self.connect();else if(["have-local-offer","have-remote-offer"].indexOf(self._peer.signalingState)>-1&&self._peer.localDescription&&self._peer.localDescription.type)return log.debug([self.id,"Peer",null,"Sending local "+self._peer.localDescription.type+" again for restart ->"],self._peer.localDescription),void self._trigger(self._peer.localDescription.type,self._peer.localDescription);self._trigger("restart",hardRestart,restartIce)},SkylinkPeer.prototype.handshakeOffer=function(restartIce){var self=this;if("stable"!==self._peer.signalingState)return void log.warn([self.id,"Peer",null,'Ignoring local offer generation as state is not "stable" ->'],self._peer.signalingState);var RTCOfferOptions={offerToReceiveAudio:!0,offerToReceiveVideo:!0,iceRestart:!!restartIce};log.debug([self.id,"Peer",null,"Generating offer ->"],RTCOfferOptions),self._peer.createOffer(function(offer){log.log([self.id,"Peer",null,"Generated offer ->"],offer),self._setLocalDescription(offer)},function(error){log.error([self.id,"Peer",null,"Failed generating offer ->"],error),self._trigger("handshakeProgress","error",error)},RTCOfferOptions)},SkylinkPeer.prototype.handshakeAnswer=function(sdpString){var self=this;if("stable"!==self._peer.signalingState)return void log.warn([self.id,"Peer",null,'Ignoring remote offer as state is not "stable" ->'],self._peer.signalingState);var offer=new RTCSessionDescription({type:"offer",sdp:sdpString});log.debug([self.id,"Peer",null,"Setting remote offer first before generating answer ->"],offer),self._setRemoteDescription(offer,function(){log.debug([self.id,"Peer",null,"Generating answer ->"],null),self._peer.createAnswer(function(answer){log.log([self.id,"Peer",null,"Generated answer ->"],answer),self._setLocalDescription(answer)},function(error){log.error([self.id,"Peer",null,"Failed generating answer ->"],error),self._trigger("handshakeProgress","error",error)})})},SkylinkPeer.prototype.handshakeComplete=function(sdpString){var self=this;if("have-local-offer"!==self._peer.signalingState)return void log.warn([self.id,"Peer",null,'Ignoring remote answer as state is not "have-local-offer" ->'],self._peer.signalingState);var answer=new RTCSessionDescription({type:"answer",sdp:sdpString});self._setRemoteDescription(answer,function(){log.log([self.id,"Peer",null,"Connection handshake has completed"])})},SkylinkPeer.prototype.addCandidate=function(candidateSession){var self=this,candidate=new RTCIceCandidate({sdpMLineIndex:candidateSession.sdpMLineIndex,sdpMid:candidateSession.sdpMid,candidate:candidateSession.candidate}),candidateId=candidateSession.candidate.split(" ")[0];return self._peer.remoteDescription&&self._peer.remoteDescription.sdp?(log.debug([self.id,"Peer",candidateId,"Processing remote ICE candidate ->"],candidate),void self._peer.addIceCandidate(candidate,function(){log.log([self.id,"Peer",candidateId,"Added remote ICE candidate"]),self._candidates.incoming.success.push(candidate)},function(error){log.error([self.id,"Peer",candidateId,"Failed adding remote ICE candidate ->"],error),self._candidates.incoming.failure.push(candidate)})):(log.debug([self.id,"Peer",candidateId,"Queueing remote ICE candidates receiving before remote description ->"],candidate),void self._candidates.incoming.queue.push(candidate))},SkylinkPeer.prototype.sendStream=function(newStream){var self=this,removeStreamHandler=null;removeStreamHandler="firefox"===user.agent.name?function(oldStream){for(var senders=self._peer.getSenders(),s=0;s<senders.length;s++)for(var tracks=oldStream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&self._peer.removeTrack(senders[s])}:function(oldStream){self._peer.removeStream(oldStream)};for(var prevStreams=self._peer.getLocalStreams(),i=0;i<prevStreams.length;i++)self._peer.removeStream(prevStreams[i]);self._peer.addStream(newStream),self._health.healthy&&self._handshakeRestart(!1,!1)},SkylinkPeer.prototype.sendData=function(blob){},SkylinkPeer.prototype.disconnect=function(){var self=this;self._peer.close()},Skylink.prototype._peerInformations={},Skylink.prototype._user=null,Skylink.prototype._userData="",Skylink.prototype.setUserData=function(userData){var self=this;self._parseUserData(userData),self._inRoom?(log.log("Updated userData -> ",userData),self._socket.send({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:self._userData}),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.getUserData=function(peerId){if(peerId&&peerId!==this._user.sid){var peerInfo=this._peerInformations[peerId];return"object"==typeof peerInfo?peerInfo.userData:null}return this._userData},Skylink.prototype._parseUserData=function(userData){log.debug("Parsing user data:",userData),this._userData=userData||""},Skylink.prototype.getPeerInfo=function(peerId){var isNotSelf=this._user&&this._user.sid?peerId!==this._user.sid:!1;if("string"==typeof peerId&&isNotSelf){var peerInfo=this._peerInformations[peerId];return"object"==typeof peerInfo?peerInfo:null}var mediaSettings={};return this._mediaScreen&&null!==this._mediaScreen?(mediaSettings=clone(this._screenSharingStreamSettings),mediaSettings.bandwidth=clone(this._streamSettings.bandwidth)):mediaSettings=clone(this._streamSettings),{userData:clone(this._userData)||"",settings:mediaSettings||{},mediaStatus:clone(this._mediaStreamsStatus)||{},agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion},room:clone(this._selectedRoom)}},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype._peerConnectionHealthTimers={},Skylink.prototype._peerConnectionHealth={},Skylink.prototype._peerPriorityWeight=0,Skylink.prototype._doOffer=function(targetMid,peerBrowser){var self=this,pc=self._peerConnections[targetMid]||self._addPeer(targetMid,peerBrowser);log.log([targetMid,null,null,"Checking caller status"],peerBrowser);var inputConstraints=self._room.connection.offerConstraints,sc=self._room.connection.sdpConstraints;for(var name in sc.mandatory)sc.mandatory.hasOwnProperty(name)&&(inputConstraints.mandatory[name]=sc.mandatory[name]);inputConstraints.optional.concat(sc.optional),checkMediaDataChannelSettings(peerBrowser.agent,peerBrowser.version,function(beOfferer,unifiedOfferConstraints){"moz"===window.webrtcDetectedType&&"MCU"===peerBrowser.agent&&(unifiedOfferConstraints.mandatory=unifiedOfferConstraints.mandatory||{},unifiedOfferConstraints.mandatory.MozDontOfferDataChannel=!0,beOfferer=!0),unifiedOfferConstraints.mandatory.iceRestart=!0,peerBrowser.os=peerBrowser.os||"","MCU"!==peerBrowser.agent&&"firefox"===window.webrtcDetectedBrowser&&"firefox"!==peerBrowser.agent&&(beOfferer=!1),beOfferer?("firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>=32&&(unifiedOfferConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0}),log.debug([targetMid,null,null,"Creating offer with config:"],unifiedOfferConstraints),pc.createOffer(function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,null,"Failed creating an offer:"],error)},unifiedOfferConstraints)):(log.debug([targetMid,null,null,"User's browser is not eligible to create the offer to the other peer. Requesting other peer to create the offer instead"],peerBrowser),self._socket.send({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self.getPeerInfo(),target:targetMid,weight:-1,sessionType:self._mediaScreen?"screensharing":"stream"}))},inputConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];return pc?void pc.createAnswer(function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)}):void log.error([targetMid,null,null,"Requested to create an answer but user does not have any existing connection to peer"])},Skylink.prototype._startPeerConnectionHealthCheck=function(peerId,toOffer){var self=this,timer=self._enableIceTrickle&&!self._peerIceTrickleDisabled[peerId]?toOffer?12500:1e4:5e4;timer=self._hasMCU?105e3:timer,timer+=1e4*self._retryCount,log.log([peerId,"PeerConnectionHealth",null,"Initializing check for peer's connection health"]),self._peerConnectionHealthTimers[peerId]&&self._stopPeerConnectionHealthCheck(peerId),self._peerConnectionHealthTimers[peerId]=setTimeout(function(){var connectionStable=!1,pc=self._peerConnections[peerId];if(pc){var dc=(self._channels[peerId]||{}).main,dcConnected=pc.hasMainChannel?dc&&dc.readyState===self.DATA_CHANNEL_STATE.OPEN:!0,iceConnected=pc.iceConnectionState===self.ICE_CONNECTION_STATE.CONNECTED||pc.iceConnectionState===self.ICE_CONNECTION_STATE.COMPLETED,signalingConnected=pc.signalingState===self.PEER_CONNECTION_STATE.STABLE;connectionStable=dcConnected&&iceConnected&&signalingConnected,log.debug([peerId,"PeerConnectionHealth",null,"Connection status"],{dcConnected:dcConnected,iceConnected:iceConnected,signalingConnected:signalingConnected})}log.debug([peerId,"PeerConnectionHealth",null,"Require reconnection?"],connectionStable),connectionStable?self._peerConnectionHealth[peerId]=!0:(log.warn([peerId,"PeerConnectionHealth",null,"Peer's health timer has expired"],1e4),self._stopPeerConnectionHealthCheck(peerId),log.debug([peerId,"PeerConnectionHealth",null,"Ice connection state time out. Re-negotiating connection"]),self._retryCount<30&&self._retryCount++,self._hasMCU?self._restartMCUConnection():self._restartPeerConnection(peerId,!0,!0,null,!1))},timer)},Skylink.prototype._stopPeerConnectionHealthCheck=function(peerId){var self=this;self._peerConnectionHealthTimers[peerId]?(log.debug([peerId,"PeerConnectionHealth",null,"Stopping peer connection health timer check"]),clearTimeout(self._peerConnectionHealthTimers[peerId]),delete self._peerConnectionHealthTimers[peerId]):log.debug([peerId,"PeerConnectionHealth",null,"Peer connection health does not have a timer check"])},Skylink.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){var self=this,pc=self._peerConnections[targetMid],sdpLines=sessionDescription.sdp.split("\r\n");if(sdpLines=self._removeSDPFirefoxH264Pref(sdpLines),self._streamSettings.hasOwnProperty("audio")&&self._streamSettings.audio.stereo&&self._addSDPStereo(sdpLines),log.info([targetMid,null,null,"Requested stereo:"],self._streamSettings.audio&&self._streamSettings.audio.stereo?self._streamSettings.audio.stereo:!1),self._streamSettings.hasOwnProperty("bandwidth")){var peerSettings=(self._peerInformations[targetMid]||{}).settings||{};sdpLines=self._setSDPBitrate(sdpLines,peerSettings)}self._streamSettings.bandwidth=self._streamSettings.bandwidth||{},self._streamSettings.video=self._streamSettings.video||!1,log.info([targetMid,null,null,"Custom bandwidth settings:"],{audio:(self._streamSettings.bandwidth.audio||"Not set")+" kB/s",video:(self._streamSettings.bandwidth.video||"Not set")+" kB/s",data:(self._streamSettings.bandwidth.data||"Not set")+" kB/s"}),self._streamSettings.video.hasOwnProperty("frameRate")&&self._streamSettings.video.hasOwnProperty("resolution")&&log.info([targetMid,null,null,"Custom resolution settings:"],{frameRate:(self._streamSettings.video.frameRate||"Not set")+" fps",width:(self._streamSettings.video.resolution.width||"Not set")+" px",height:(self._streamSettings.video.resolution.height||"Not set")+" px"}),self._selectedVideoCodec!==self.VIDEO_CODEC.AUTO?sdpLines=self._setSDPVideoCodec(sdpLines):log.log([targetMid,null,null,"Not setting any video codec"]),self._selectedAudioCodec!==self.AUDIO_CODEC.AUTO?sdpLines=self._setSDPAudioCodec(sdpLines):log.log([targetMid,null,null,"Not setting any audio codec"]),sessionDescription.sdp=sdpLines.join("\r\n"),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Updated session description:"],sessionDescription),pc.setLocalDescription(sessionDescription,function(){log.debug([targetMid,sessionDescription.type,"Local description set"]),self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local";var shouldWaitForCandidates=!1;(!self._enableIceTrickle||self._peerIceTrickleDisabled[targetMid])&&(shouldWaitForCandidates=!0,("remote"===pc.setOffer||"remote"===pc.setAnswer)&&(shouldWaitForCandidates=!1)),shouldWaitForCandidates?log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Waiting for Ice gathering to complete to prevent Ice trickle"]):(sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=self._addSDPSsrcFirefoxAnswer(targetMid,sessionDescription.sdp)),self._socket.send({type:sessionDescription.type,sdp:sessionDescription.sdp,mid:self._user.sid,target:targetMid,rid:self._room.id}))},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Failed setting local description: "],error)})},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype._autoIntroduce=!0,Skylink.prototype._isPrivileged=!1,Skylink.prototype._parentKey=null,Skylink.prototype._peerList=null,Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._isPrivileged?self._appKey?self._parentKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._socket.send({type:self._SIG_MESSAGE_TYPE.GET_PEERS,privilegedKey:self._appKey,parentKey:self._parentKey,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.sid,null),log.log("Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void log.warn("Parent key is not defined. Please authenticate again."):void log.warn("App key is not defined. Please authenticate again."):void log.warn("Please upgrade your key to privileged to use this function")},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;return self._isPrivileged?(self._socket.send({type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId}),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.sid,sendingPeerId,receivingPeerId,null),void log.log("Introducing",sendingPeerId,"to",receivingPeerId)):(log.warn("Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,sendingPeerId,receivingPeerId,"notPrivileged"))},Skylink.prototype.joinRoom=function(room,mediaOptions,callback){var error,self=this,stopStream=!1,previousRoom=self._selectedRoom;if(null===room)return error="Invalid room name is provided",log.error(error,room),"function"==typeof mediaOptions&&(callback=mediaOptions,mediaOptions=void 0),void("function"==typeof callback&&callback({room:room,errorCode:self._room.readyState,error:new Error(error)},null));if("string"==typeof room){if("function"==typeof mediaOptions)callback=mediaOptions,mediaOptions=void 0;else if("undefined"!=typeof mediaOptions&&(null===mediaOptions||"object"!=typeof mediaOptions))return error="Invalid mediaOptions is provided",log.error(error,mediaOptions),void("function"==typeof callback&&callback({room:room,errorCode:self._room.readyState,error:new Error(error)},null))}else if("object"==typeof room)"function"==typeof mediaOptions&&(callback=mediaOptions),mediaOptions=room,room=void 0;else if("function"==typeof room)callback=room,room=void 0,mediaOptions=void 0;else if("undefined"!=typeof room&&(error="Invalid mediaOptions is provided",log.error(error,mediaOptions),"function"==typeof mediaOptions&&(callback=mediaOptions,mediaOptions=void 0),"function"==typeof callback))return void callback({room:self._defaultRoom,errorCode:self._room.readyState,error:new Error(error)},null);room||(room=self._defaultRoom);var channelCallback=function(error,success){error?"function"==typeof callback&&callback({error:error,errorCode:null,room:self._selectedRoom},null):("function"==typeof callback&&self.once("peerJoined",function(peerId,peerInfo,isSelf){self._wait(function(){log.log([null,"Socket",self._selectedRoom,"Peer joined. Firing callback. PeerId ->"],peerId),callback(null,{room:self._selectedRoom,peerId:peerId,peerInfo:peerInfo})},function(){return self._inRoom},!1)},function(peerId,peerInfo,isSelf){return isSelf},!1),self._socket.send({type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._appKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration,isPrivileged:self._isPrivileged===!0,autoIntroduce:self._autoIntroduce!==!1}))};if(self._inRoom)"object"==typeof mediaOptions&&mediaOptions.audio===!1&&mediaOptions.video===!1&&(stopStream=!0,log.warn([null,"MediaStream",self._selectedRoom,"Stopping current MediaStream as provided settings for audio and video is false ("+stopStream+")"],mediaOptions)),log.log([null,"Socket",previousRoom,"Leaving room before joining new room"],self._selectedRoom),self.leaveRoom(stopStream,function(error,success){log.log([null,"Socket",previousRoom,"Leave room callback result"],{error:error,success:success}),log.log([null,"Socket",self._selectedRoom,"Joining room. Media options:"],mediaOptions),("string"==typeof room?room===self._selectedRoom:1)?self._waitForOpenChannel(mediaOptions,channelCallback):self._initSelectedRoom(room,function(errorObj){errorObj?"function"==typeof callback&&callback({room:self._selectedRoom,errorCode:self._room.readyState,error:new Error(errorObj)},null):self._waitForOpenChannel(mediaOptions,channelCallback)})});else{log.log([null,"Socket",self._selectedRoom,"Joining room. Media options:"],mediaOptions);var isNotSameRoom="string"==typeof room?room!==self._selectedRoom:!1;isNotSameRoom?self._initSelectedRoom(room,function(errorObj){errorObj?"function"==typeof callback&&callback({room:self._selectedRoom,errorCode:self._room.readyState,error:new Error(errorObj)},null):self._waitForOpenChannel(mediaOptions,channelCallback)}):self._waitForOpenChannel(mediaOptions,channelCallback)}},Skylink.prototype._waitForOpenChannel=function(mediaOptions,callback){var self=this;self._socketCurrentReconnectionAttempt=0,self._wait(function(){self._condition("channelOpen",function(){mediaOptions=mediaOptions||{},self._parseUserData(mediaOptions.userData||self._userData),self._parseBandwidthSettings(mediaOptions.bandwidth),self._waitForLocalMediaStream(callback,mediaOptions)},function(){return self._socket.connected||self._socket.connect(),self._socket.connected},function(state){return!0})},function(){return self._room.readyState===self.READY_STATE_CHANGE.COMPLETED})},Skylink.prototype.leaveRoom=function(stopMediaOptions,callback){var error,self=this,stopUserMedia=!0,stopScreenshare=!0;if("function"==typeof stopMediaOptions?(callback=stopMediaOptions,stopMediaOptions=!0):"undefined"==typeof stopMediaOptions&&(stopMediaOptions=!0),"object"==typeof stopMediaOptions&&null!==stopMediaOptions)stopUserMedia=stopMediaOptions.userMedia!==!1,stopScreenshare=stopMediaOptions.screenshare!==!1;else{if("boolean"!=typeof stopMediaOptions)return error="stopMediaOptions parameter provided is not a boolean or valid object",log.error(error,stopMediaOptions),void("function"==typeof callback&&(log.log([null,"Socket",self._selectedRoom,"Error occurred. Firing callback with error -> "],error),callback(new Error(error),null)));stopMediaOptions===!1&&(stopUserMedia=!1,stopScreenshare=!1)}if(!self._inRoom)return error="Unable to leave room as user is not in any room",log.error(error),void("function"==typeof callback&&(log.log([null,"Socket",self._selectedRoom,"Error occurred. Firing callback with error -> "],error),callback(new Error(error),null)));var i,peers=Object.keys(self._peerInformations),conns=Object.keys(self._peerConnections);for(i=0;i<conns.length;i++)-1===peers.indexOf(conns[i])&&peers.push(conns[i]);for(i=0;i<peers.length;i++)self._removePeer(peers[i]);self._inRoom=!1,self._closeChannel(),self._stopLocalMediaStreams({userMedia:stopUserMedia,screenshare:stopScreenshare}),self._wait(function(){log.log([null,"Socket",self._selectedRoom,"User left the room. Callback fired."]),self._trigger("peerLeft",self._user.sid,self.getPeerInfo(),!0),"function"==typeof callback&&callback(null,{peerId:self._user.sid,previousRoom:self._selectedRoom})},function(){return 0===Object.keys(self._peerConnections).length&&self._socket.connected===!1},!1)},Skylink.prototype.lockRoom=function(){log.log("Update to isRoomLocked status ->",!0),this._socket.send({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0}),this._roomLocked=!0,this._trigger("roomLock",!0,this._user.sid,this.getPeerInfo(),!0)},Skylink.prototype.unlockRoom=function(){log.log("Update to isRoomLocked status ->",!1),this._socket.send({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1}),this._roomLocked=!1,this._trigger("roomLock",!1,this._user.sid,this.getPeerInfo(),!0)};var globals={appKey:null,defaultRoom:null,roomServer:null,region:null,credentials:null,socketTimeout:2e4,forceSSL:!1,enableTURNServer:!0,enableSTUNServer:!0,forceTURN:!1,forceTURNSSL:!1,TURNServerTransport:"any",usePublicSTUN:!0,enableIceTrickle:!0,enableDataChannel:!0,audioCodec:"auto",videoCodec:"auto",audioFallback:!1},user={data:null,agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform},streams:{screenshare:null,usermedia:null},connection:{stereo:!1,bandwidth:{}}};Skylink.prototype._readyState=0,Skylink.prototype._room=null,Skylink.prototype._initParseConfig=function(options){var self=this;if(globals.appKey=null,globals.defaultRoom=null,globals.roomServer="//api.temasys.com.sg",globals.region=null,globals.credentials=null,globals.socketTimeout=2e4,globals.forceSSL=!1,globals.enableTURNServer=!0,globals.enableSTUNServer=!0,globals.forceTURN=!1,globals.forceTURNSSL=!1,globals.TURNServerTransport=null,globals.usePublicSTUN=!0,globals.enableIceTrickle=!0,globals.enableDataChannel=!0,globals.audioCodec=null,globals.videoCodec=null,globals.audioFallback=!1,"string"==typeof options.appKey&&options.appKey)globals.appKey=options.appKey;else{if("string"!=typeof options.apiKey||!options.apiKey)throw new Error("Provided appKey is invalid");globals.appKey=options.apiKey}if("string"==typeof options.defaultRoom&&options.defaultRoom?globals.defaultRoom=options.defaultRoom:globals.defaultRoom=self.appKey,"string"==typeof options.roomServer&&("//api.temasys.com.sg"!==options.roomServer&&log.warn("Note that the roomServer url is overriden with custom URL ("+options.roomServer+") and this may affect Skylink functionalities"),globals.roomServer=options.roomServer),"object"==typeof options.credentials&&null!==options.credentials){if("string"!=typeof options.credentials.startDateTime)throw new Error("Provided credentials.startDateTime DateTime string (ISO 8601) is invalid");if("number"!=typeof options.credentials.duration)throw new Error("Provided credentials.duration (in hours) is invalid");if("string"!=typeof options.credentials.credentials)throw new Error("Provided credentials.credentials string is invalid");globals.credentials={startDateTime:options.credentials.startDateTime,duration:options.credentials.duration,credentials:options.credentials.credentials}}if("string"==typeof options.region){for(var r in self.REGIONAL_SERVER)if(self.REGIONAL_SERVER.hasOwnProperty(r)&&options.region===self.REGIONAL_SERVER[r]){globals.region=options.region;break}if(null===globals.region)throw new Error("Provided region is invalid. Please select the list of options from REGIONAL_SERVER list")}if(options.forceSSL===!0&&(globals.forceSSL=!0),options.enableTURNServer===!1&&(globals.enableTURNServer=!1),options.enableSTUNServer===!1&&(globals.enableSTUNServer=!1),options.forceTURN===!0&&(globals.enableTURNServer=!0,globals.enableSTUNServer=!1),options.forceTURNSSL===!0&&(globals.forceTURNSSL=!0),options.usePublicSTUN===!1&&(globals.usePublicSTUN=!1),options.enableIceTrickle===!1&&(globals.enableIceTrickle=!1),options.enableDataChannel===!1&&(globals.enableDataChannel=!1),"string"==typeof options.audioCodec){for(var ac in self.AUDIO_CODEC)if(self.AUDIO_CODEC.hasOwnProperty(ac)&&options.audioCodec===self.AUDIO_CODEC[ac]){globals.audioCodec=options.audioCodec;break}if(null===globals.audioCodec)throw new Error("Provided audioCodec is invalid. Please select the list of options from AUDIO_CODEC list")}else globals.audioCodec=self.AUDIO_CODEC.AUTO;if("string"==typeof options.videoCodec){for(var vc in self.VIDEO_CODEC)if(self.VIDEO_CODEC.hasOwnProperty(vc)&&options.videoCodec===self.VIDEO_CODEC[vc]){globals.videoCodec=options.videoCodec;break}if(null===globals.videoCodec)throw new Error("Provided videoCodec is invalid. Please select the list of options from VIDEO_CODEC list")}else globals.videoCodec=self.VIDEO_CODEC.AUTO;if(options.audioFallback===!0&&(globals.audioFallback=!0),"number"==typeof options.socketTimeout){if(options.socketTimeout<5e3)throw new Error("Provided socket timeout is lesser than minimum value of 5000. Please configure a timeout higher than 5000");globals.socketTimeout=options.socketTimeout}},Skylink.prototype._initCheckDependencies=function(callback){var self=this;return"object"!=typeof window.AdapterJS||null===window.AdapterJS?void callback({status:null,errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED,content:new Error("AdapterJS dependency is not loaded. Please load AdapterJS version 0.12.3 in https://github.com/Temasys/AdapterJS/releases/0.12.3")}):"0.12.3"!==window.AdapterJS.VERSION?void callback({status:null,errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED,content:new Error("Incorrect AdapterJS dependency loaded. Please load the AdapterJS version 0.12.3 in https://github.com/Temasys/AdapterJS/releases/0.12.3")}):"function"!=typeof window.io?void callback({status:null,errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO,content:new Error("XMLHttpRequest is not supported. Please upgrade your browser with the latest in http://browsehappy.com")}):window.XMLHttpRequest||self._room.useXDomainRequest?void AdapterJS.webRTCReady(function(){return window.RTCPeerConnection?(log.debug("init(): WebRTC functions has been loaded"),void callback(null)):void callback({status:null,errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT,content:new Error("Your browser does not support WebRTC. Please switch to Chrome, Firefox, Opera or install our Temasys free Plugin for IE and Safari")})}):void callback({status:null,errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT,
content:new Error("socket.io-client dependency is not loaded. Please load socket.io-client version 1.3.7 in https://cdn.socket.io/socket.io-1.3.7.js (or http://socket.io/download/)")})},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;self.init({appKey:self._room.appKey,roomServer:self._room.server,defaultRoom:self._room.room["default"],selectedRoom:room,serverRegion:self._room.region,enableDataChannel:self._connection.datachannel,enableIceTrickle:self._connection.ICE.trickle,enableTURNServer:!!self._connection.ICE.TURN,enableSTUNServer:!!self._connection.ICE.STUN,TURNTransport:self._connection.ICE.TURN?self._connection.ICE.TURN.transport:self.TURN_TRANSPORT.ANY,audioFallback:self._audioFallback,forceSSL:"https:"===self._socket.protocol,socketTimeout:self._socket.timeout,forceTURNSSL:self._connection.ICE.TURN?!!self._connection.ICE.TURN.ssl:"https:"===window.location.protocol,audioCodec:self._connection.SDP.codecs.audio,videoCodec:self._connection.SDP.codecs.video,forceTURN:self._connection.ICE.TURN?self._connection.ICE.TURN.force:!1,usePublicSTUN:self._connection.ICE.STUN?self._connection.ICE.STUN["public"]:!1},function(error,success){return error?callback(error):void callback(null)})},Skylink.prototype.init=function(passedOptions,passedCallback){var self=this,options=null,callback=null;"string"==typeof passedOptions?options={appKey:passedOptions}:"object"==typeof passedOptions&&null!==passedOptions?options=clone(passedOptions):(options={},"function"==typeof passedOptions&&(callback=passedOptions)),"function"==typeof passedCallback&&(callback=passedCallback);var handleErrorCase=function(content,room){if(self._readyState=-1,self._trigger("readyStateChange",-1,content,room),"function"==typeof callback)return void callback({errorCode:content.errorCode,error:content.content,status:content.status},null);throw content.content},handleSuccessCase=function(session,room){if(self._readyState=2,self._trigger("readyStateChange",2,null,room),"function"==typeof callback){var successPayload=clone(globals);successPayload.readyState=self._readyState,successPayload.serverUrl=self._room._session.path,successPayload.selectedRoom=self._room.name,successPayload.serverRegion=successPayload.region,callback(null,successPayload)}};try{self._readyState=0,self._trigger("readyStateChange",0,null,null),self._initParseConfig(options),self._initCheckDependencies(function(error){return error?handleErrorCase(error,globals.defaultRoom):(self._room=new SkylinkRoom,self._listenToEvents(),self._readyState=1,self._trigger("readyStateChange",1,null,globals.defaultRoom),self._room.once("readyState",function(state,content,room){return-1===state?void handleErrorCase(content,room):void handleSuccessCase(content,room)},function(state,content,room){return-1===state||2===state}),void self._room.fetchSession())})}catch(error){handleErrorCase({status:null,content:error,errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH},globals.defaultRoom)}},Skylink.prototype._listenToEvents=function(){var self=this;return self._room?(self._room.on("socket:connect",function(){self._trigger("channelOpen")}),self._room.on("socket:disconnect",function(){self._trigger("channelClose")}),self._room.on("socket:message",function(message){self._trigger("channelMessage")}),self._room.on("socket:connectError",function(state,error,transport){self._trigger("socketError",state,error,transport)}),self._room.on("socket:connectRetry",function(fallbackMethod,attempt){self._trigger("channelRetry",fallbackMethod,attempt)}),self._room.on("socket:error",function(error){self._trigger("channelError",error)}),self._room.on("peer:iceConnectionState",function(peerId,state){self._trigger("iceConnectionState",state,peerId)}),self._room.on("peer:iceGatheringState",function(peerId,state){self._trigger("iceConnectionState",state,peerId)}),self._room.on("peer:iceConnectionState",function(peerId,state){self._trigger("iceConnectionState",state,peerId)}),self._room.on("peer:signalingState",function(peerId,state){self._trigger("signalingState",state,peerId)}),self._room.on("peer:handshakeProgress",function(peerId,state,error){self._trigger("handshakeProgress",state,peerId,error)}),self._room.on("peer:join",function(peerId){self._trigger("peerJoined",peerId,{settings:{audio:!0,video:!0},mediaStatus:{audioMuted:!1,videoMuted:!1},agent:{},room:self.id},!1)}),self._room.on("peer:stream",function(peerId,stream){self._trigger("incomingStream",peerId,stream,{settings:{audio:!0,video:!0},mediaStatus:{audioMuted:!1,videoMuted:!1},agent:{},room:self.id},!1)}),void log.debug("_listenToEvents(): Listening to room object events")):void log.error("_listenToEvents(): Unable to listen to room object events as room object is not initialised")},SkylinkRoom.prototype.name=null,SkylinkRoom.prototype.readyState=0,SkylinkRoom.prototype.connected=!1,SkylinkRoom.prototype.locked=!1,SkylinkRoom.prototype._session={protocol:null,path:null,random:null,data:null},SkylinkRoom.prototype._connection={state:0,recvonly:!1,iceServers:[]},SkylinkRoom.prototype._socket=null,SkylinkRoom.prototype._peers={},SkylinkRoom.prototype.fetchSession=function(){var self=this,xhr=null;self.readyState=0,self._trigger("readyState",0,null,self.name),"function"==typeof window.XDomainRequest||"object"==typeof window.XDomainRequest?(xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType},log.warn([null,"Room",self.name,"XDomainRequest option is found. Using XDomainRequest for CORS"])):(xhr=new XMLHttpRequest,xhr.setContentType=function(contentType){xhr.setRequestHeader("Content-type",contentType)}),xhr.onload=function(){var response=JSON.parse(xhr.responseText||xhr.response||"{}");return log.info([null,"Room",self.name,"Received response from API server ->"],response),response.success?(log.debug([null,"Room",self.name,"Session has been initialized"]),self._session.data=response,self._createSocket(),self.readyState=2,void self._trigger("readyState",2,response,self.name)):(self.readyState=-1,void self._trigger("readyState",-1,{status:xhr.status||200,errorCode:response.error,content:new Error(response.info)},self.name))},xhr.onerror=function(error){log.error([null,"Room",self.name,"Failed retrieving session from API server"],error),self.readyState=-1,self._trigger("readyState",-1,{status:0,errorCode:-1,content:new Error("Failed retrieving response from API server")},self.name)},xhr.onprogress=function(){log.debug([null,"Room",self.name,"Retrieving session from API server in-progress"]),self.readyState=1,self._trigger("readyState",1,null,self.name)},log.debug([null,"Room",self.name,"Retrieving API credentials from server ->"],self._session.path),xhr.open("GET",self._session.path,!0),xhr.send()},SkylinkRoom.prototype._createSocket=function(){var self=this;return self._session.data?(self._socket=new SkylinkSocket({server:self._session.data.ipSigserver,protocol:self._session.protocol,timeout:globals.timeout,httpPortList:self._session.data.httpPortList,httpsPortList:self._session.data.httpsPortList}),self._socket.on("connect",function(){self._trigger("socket:connect")}),self._socket.on("disconnect",function(){self._trigger("socket:disconnect")}),self._socket.on("message",function(message){self._trigger("socket:message",message),self._messageReactor(message)}),self._socket.on("connectError",function(state,error,transport){self._trigger("socket:connectError",state,error,transport)}),self._socket.on("connectRetry",function(fallbackMethod,attempt){self._trigger("socket:connectRetry",fallbackMethod,attempt)}),self._socket.on("error",function(error){self._trigger("socket:error",error)}),void log.debug([null,"Room",self.name,"Listening to socket object events"])):void log.error([null,"Room",self.name,"Unable to initialize socket object as there is no session"])},SkylinkRoom.prototype._createPeer=function(peerId,config){var self=this;return self._peers[peerId]?void log.debug([peerId,"Room",self.name,"Ignoring creating of peer object as session exists"]):(self._peers[peerId]=new SkylinkPeer({id:peerId,iceServers:self._connection.iceServers,agent:{name:config.user.agent.name,version:config.user.agent.version,os:config.user.agent.os},connection:{recvonly:config.connection.recvOnly,datachannel:config.connection.dataChannel,trickleICE:config.connection.trickleICE,stereo:config.connection.stereo}}),self._peers[peerId].on("stream",function(stream){self._trigger("peer:stream",peerId,stream)}),self._peers[peerId].on("candidate",function(candidate){self._messageConstructor("candidate",{candidate:candidate.candidate,sdpMLineIndex:candidate.sdpMLineIndex,sdpMid:candidate.sdpMid,target:peerId})}),self._peers[peerId].on("handshakeProgress",function(state,error){self._trigger("peer:handshakeProgress",peerId,state,error)}),self._peers[peerId].on("iceConnectionState",function(state){self._trigger("peer:iceConnectionState",peerId,state)}),self._peers[peerId].on("iceGatheringState",function(state){self._trigger("peer:iceGatheringState",peerId,state)}),self._peers[peerId].on("signalingState",function(state){self._trigger("peer:signalingState",peerId,state)}),self._peers[peerId].on("offer",function(offer){self._messageConstructor("offer",{sdp:offer.sdp,target:peerId})}),self._peers[peerId].on("answer",function(answer){self._messageConstructor("answer",{sdp:answer.sdp,target:peerId})}),self._peers[peerId].sendStream(user.streams.usermedia),self._trigger("peer:handshakeProgress",peerId,config.type),self._trigger("peer:join",peerId),void log.debug([peerId,"Room",self.name,"Listening to peer object events"]))},SkylinkRoom.prototype.connect=function(stream){var self=this;self._socket.once("connectState",function(state,error){if(1===state)self._connection.state=1,self._trigger("connectState",1,null),self._messageConstructor("joinRoom");else{if(self._connection.state=1,0===state)return void self._trigger("connectState",-1,new Error("Socket disconnected whilst attempting to join room"));self._trigger("connectState",-1,error)}},function(state){return 0!==state}),self._connection.state=0,self._trigger("connectState",0,null),window.navigator.getUserMedia({audio:!0,video:!0},function(stream){user.streams.usermedia=stream,self._socket.connect()},function(error){throw error})},SkylinkRoom.prototype._messageReactor=function(message){var self=this;"inRoom"===message.type?(self._session.data.sid=message.sid,self._connection.iceServers=message.pc_config.iceServers,self._connection.tieBreaker=(new Date).getTime(),"number"==typeof message.tieBreaker&&(self._connection.tieBreaker=message.tieBreaker),"firefox"===user.agent.name&&(self._connection.tieBreaker-=1e10),self._messageConstructor("enter")):"enter"===message.type?(self._createPeer(message.mid,message),self._messageConstructor("welcome",{target:message.mid})):"welcome"===message.type?(self._createPeer(message.mid,message),self._peers[message.mid]&&(message.tieBreaker>self._connection.tieBreaker?self._peers[message.mid].handshakeOffer():self._messageConstructor("welcome",{target:message.mid}))):"offer"===message.type?self._peers[message.mid]&&self._peers[message.mid].handshakeAnswer(message.sdp):"answer"===message.type?self._peers[message.mid]&&self._peers[message.mid].handshakeComplete(message.sdp):"candidate"===message.type&&self._peers[message.mid]&&self._peers[message.mid].addCandidate({sdpMid:message.sdpMid,sdpMLineIndex:message.sdpMLineIndex,candidate:message.candidate})},SkylinkRoom.prototype._messageConstructor=function(type,data){var self=this,message={type:type,rid:self._session.data.room_key};"string"==typeof self._session.data.sid&&(message.mid=self._session.data.sid),"joinRoom"===type?(message.uid=self._session.data.username,message.cid=self._session.data.cid,message.userCred=self._session.data.userCred,message.timeStamp=self._session.data.timeStamp,message.apiOwner=self._session.data.apiOwner,message.roomCred=self._session.data.roomCred,message.start=self._session.data.start,message.len=self._session.data.len,message.isPrivileged=self._session.data.isPrivileged===!0,message.autoIntroduce=self._session.data.autoIntroduce!==!1):"enter"===type||"welcome"===type?(message.user={agent:{name:user.agent.name,version:user.agent.version,os:user.agent.os},data:user.data},message.connection={stereo:self._connection.stereo,recvOnly:self._connection.recvonly,dataChannel:globals.enableDataChannel,trickleICE:globals.trickleICE},message.stream={audio:!1,video:!1},"welcome"===type&&(message.tieBreaker=self._connection.tieBreaker,message.target=data.target)):"candidate"===type?(message.sdpMLineIndex=data.sdpMLineIndex,message.sdpMid=data.sdpMid,message.candidate=data.candidate,message.target=data.target):("offer"===type||"answer"===type)&&(message.sdp=data.sdp,message.target=data.target),self._socket.send(message)},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0};var _LOG_KEY="SkylinkJS",_LOG_LEVELS=["error","warn","info","log","debug"],_logLevel=0,_enableDebugMode=!1,_enableDebugStack=!1,_enableDebugTrace=!1,_storedLogs=[],_getStoredLogsFn=function(logLevel){if("undefined"==typeof logLevel)return _storedLogs;for(var returnLogs=[],i=0;i<_storedLogs.length;i++)_storedLogs[i][1]===_LOG_LEVELS[logLevel]&&returnLogs.push(_storedLogs[i]);return returnLogs},_clearAllStoredLogsFn=function(){_storedLogs=[]},_printAllStoredLogsFn=function(){for(var i=0;i<_storedLogs.length;i++){_storedLogs[i][0],"undefined"!==console[_storedLogs[i][1]]?_storedLogs[i][1]:"log",_storedLogs[i][2],_storedLogs[i][3]}};window.SkylinkLogs={getLogs:_getStoredLogsFn,clearAllLogs:_clearAllStoredLogsFn,printAllLogs:_printAllStoredLogsFn};var _logFn=function(logLevel,message,debugObject){var outputLog=_LOG_KEY;if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;if(_enableDebugMode&&_enableDebugStack){var logItem=[new Date,_LOG_LEVELS[logLevel],outputLog];"undefined"!=typeof debugObject&&logItem.push(debugObject),_storedLogs.push(logItem)}if(_logLevel>=logLevel&&(logLevel="undefined"==typeof console[_LOG_LEVELS[logLevel]]?3:logLevel,_enableDebugMode&&_enableDebugTrace)){"undefined"==typeof console.trace?logLevel[3]:"trace";"undefined"!=typeof debugObject?"undefined"!=typeof console.trace:"undefined"!=typeof console.trace}},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.setLogLevel=function(logLevel){void 0===logLevel&&(logLevel=Skylink.LOG_LEVEL.WARN);for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){return"object"==typeof isDebugMode&&(Object.keys(isDebugMode).length>0?(_enableDebugTrace=!!isDebugMode.trace,_enableDebugStack=!!isDebugMode.storeLogs):(_enableDebugMode=!1,_enableDebugTrace=!1,_enableDebugStack=!1)),isDebugMode===!1?(_enableDebugMode=!1,_enableDebugTrace=!1,void(_enableDebugStack=!1)):(_enableDebugMode=!0,_enableDebugTrace=!0,void(_enableDebugStack=!0))},Skylink.prototype._EVENTS={channelOpen:[],channelClose:[],channelMessage:[],channelError:[],channelRetry:[],socketError:[],readyStateChange:[],handshakeProgress:[],candidateGenerationState:[],peerConnectionState:[],iceConnectionState:[],mediaAccessError:[],mediaAccessFallback:[],mediaAccessSuccess:[],mediaAccessRequired:[],mediaAccessStopped:[],peerJoined:[],peerRestart:[],peerUpdated:[],peerLeft:[],incomingStream:[],incomingMessage:[],incomingData:[],incomingDataRequest:[],roomLock:[],dataChannelState:[],dataTransferState:[],systemAction:[],serverPeerJoined:[],serverPeerLeft:[],serverPeerRestart:[],streamEnded:[],streamMuted:[],getPeersStateChange:[],introduceStateChange:[]},Skylink.prototype._onceEvents={},Skylink.prototype._timestamp={now:Date.now()||function(){return+new Date},screen:!1},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(log.log([null,"Event",eventName,"Event is fired"]),arr[i].apply(this,args)===!1)break}catch(error){throw log.error([null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(once[j][1].apply(this,args)===!0){if(log.log([null,"Event",eventName,"Condition is met. Firing event"]),once[j][0].apply(this,args)===!1)break;once[j][2]||(log.log([null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else log.log([null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"])):log.error([null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways="undefined"==typeof fireAlways?!1:fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),log.log([null,"Event",eventName,"Event is subscribed on condition"])):log.error([null,"Event",eventName,"Provided callback is not a function"])},Skylink.prototype.off=function(eventName,callback){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void log.log([null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName],once=this._onceEvents[eventName],i=0;i<arr.length;i++)if(arr[i]===callback){log.log([null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){log.log([null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return log.log([null,"Event",eventName,"First condition is met. Firing callback"]),void callback();log.log([null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else log.error([null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways="undefined"==typeof fireAlways?!1:fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return log.log([null,"Event",null,"Condition is met. Firing callback"]),void callback();log.log([null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(log.log([null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&log.error([null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&log.error([null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,wait){var self=this;return function(){self._timestamp.func||(self._timestamp.func=self._timestamp.now-wait);var now=Date.now();now-self._timestamp.func<wait||(func.apply(self,arguments),self._timestamp.func=now)}},SkylinkSocket.prototype.connected=!1,SkylinkSocket.prototype.dead=!1,SkylinkSocket.prototype._ports={"http:":[6001,80,3e3],"https:":[443,3443]},SkylinkSocket.prototype._transports={WebSocket:["websocket"],Polling:["xhr-polling","jsonp-polling","polling"]},SkylinkSocket.prototype._connection={state:0,server:"signaling.temasys.com.sg",protocol:window.location.protocol,path:null,retries:{max:4,delay:1e3,current:0},timeout:2e4,port:80,transport:"WebSocket",transportFallback:!1},SkylinkSocket.prototype._io=null,SkylinkSocket.prototype._messaging={queue:[],timestamp:null,interval:1e3,throughput:16,timer:null,typesToQueue:["stream","updateUserEvent","roomLockEvent","muteAudioEvent","muteVideoEvent","public"]},SkylinkSocket.prototype.connect=function(){var self=this;self._connection.path=self._connection.protocol+"//"+self._connection.server+":"+self._connection.port,self.connected=!1,self.dead=!1,self._connection.state=0,self._trigger("connectState",0,null),log.debug([null,"Socket",null,"Connecting to signaling server with the following configuration :"],self._connection),self._socket=io.connect(self._connection.path,{forceNew:!0,reconnection:!0,reconnectionAttempts:self._connection.retries.max,reconectionDelayMax:self._connection.retries.delay,timeout:self._connection.timeout,transports:self._transports[self._connection.transport]}),self._listenToEvents()},SkylinkSocket.prototype.disconnect=function(){var self=this;self._socket&&(log.debug([null,"Socket",null,"Disconnecting"]),self._socket.disconnect())},SkylinkSocket.prototype.send=function(message){var self=this;self._limitMessageInterval(function(groupMessage){if(!self._socket)return void log.warn([null,"Socket",null,"Dropping message as connection is not yet initialized ->"],groupMessage);if(!self.connected)return void log.warn([null,"Socket",null,"Dropping message as connection is not yet connected ->"],groupMessage);log.debug([null,"Socket",null,"Sending message ->"],groupMessage);var messageString=JSON.stringify(groupMessage);self._socket.send(messageString)},message)},SkylinkSocket.prototype._limitMessageInterval=function(fn,message){var self=this,delayFn=function(){if(self._messaging.queue.length>0){var data=self._messaging.queue[0];self._messaging.queue.length<self._messaging.throughput?(log.debug([null,"Socket",null,"Sending delayed messages"],self._messaging.queue),fn({type:"group",lists:self._messaging.queue.splice(0,self._messaging.queue.length),mid:data.mid,rid:data.rid}),clearTimeout(self._messaging.timer),self._messaging.timer=null):(log.debug([null,"Socket",null,"Sending delayed first 16 messages"],self._messaging.queue),fn({type:"group",lists:self._messaging.queue.splice(0,self._messaging.throughput),mid:data.mid,rid:data.rid}),clearTimeout(self._messaging.timer),self._messaging.timer=null,self._messaging.timer=setTimeout(delayFn,self._messaging.interval)),self._messaging.timestamp=Date.now()||function(){return+new Date}}};return(Date.now()||function(){return+new Date})-self._messaging.timestamp<self._messaging.interval&&self._messaging.typesToQueue.indexOf(message.type)>-1?(log.warn([null,"Socket",null,"Messages has been fired too rapidly. Delaying messages with queue"]),self._messaging.queue.push(message),void(self._messaging.timer||(self._messaging.timer=setTimeout(delayFn,self._messaging.interval-((Date.now()||function(){return+new Date})-self._messaging.timestamp))))):(fn(message),void(self._messaging.timestamp=Date.now()||function(){return+new Date}))},SkylinkSocket.prototype._reconnect=function(){var self=this;self._socket&&(self._socket.removeAllListeners("connect_error"),self._socket.removeAllListeners("reconnect_attempt"),self._socket.removeAllListeners("reconnect_error"),self._socket.removeAllListeners("reconnect_failed"),self._socket.removeAllListeners("connect"),self._socket.removeAllListeners("reconnect"),self._socket.removeAllListeners("error"),self._socket.removeAllListeners("disconnect"),self._socket.removeAllListeners("message"),self.disconnect());var ports=self._ports[self._connection.protocol],index=ports.indexOf(self._connection.port),fallbackType="nonfallback";if(index<ports.length-1)self._connection.port=ports[index+1];else{if("WebSocket"!==self._connection.transport){log.error([null,"Socket",null,"Aborting reconnection after many failed retries and attempts"]),self.dead=!0;var abortError=new Error("Socket reconnection is aborted as all transports type and ports have been attempted");return self._trigger("connectError",-3,abortError,self._connection.transport),void self._trigger("connectState",-2,abortError)}self._connection.transport="Polling",self._connection.port=ports[0],self._connection.transportFallback=!0}log.debug([null,"Socket",null,"Retrying for successful connection"]),(index>0||self._connection.transportFallback)&&(fallbackType="http:"===self._connection.protocol?"WebSocket"===self._connection.transport?"fallbackPortNonSSL":"fallbackLongPollingNonSSL":"WebSocket"===self._connection.transport?"fallbackPortSSL":"fallbackLongPollingSSL"),self._trigger("connectRetry",fallbackType,self._connection.retries.current),self.connect()},SkylinkSocket.prototype._listenToEvents=function(){var self=this;if(!self._socket)return void log.error([null,"Socket",null,"Unable to listen to events as connection object is not initialized"]);self._socket.on("connect_error",function(error){log.debug([null,"Socket",null,"Connection error state -> connect_error"],error),0===self._connection.retries.current&&self._trigger("connectError",0,error,self._connection.transport)}),self._socket.on("connect_timeout",function(){log.debug([null,"Socket",null,"Connection error state -> connect_timeout"])}),self._socket.on("reconnect_attempt",function(attempt){log.debug([null,"Socket",null,"Connection error state -> reconnect_attempt"],attempt),self._connection.retries.current++,self._trigger("connectError",-4,null,self._connection.transport)}),self._socket.on("reconnect_error",function(error){log.debug([null,"Socket",null,"Connection error state -> reconnect_error"],error),self._trigger("connectError",-1,error,self._connection.transport)}),self._socket.on("reconnect_failed",function(){log.debug([null,"Socket",null,"Connection error state -> reconnect_failed"]),self._trigger("connectError",-1,new Error("Socket reeconnection attempts have failed for port "+self._connection.port+' and transport "'+self._connection.transport+'"'),self._connection.transport),self._reconnect()}),self._socket.on("reconnecting",function(attempt){log.debug([null,"Socket",null,"Connection error state -> reconnecting"],attempt)});var connectHandler=function(){self.connected=!0,log.debug([null,"Socket",null,"Connection to signaling server has been opened"]),self._trigger("connect"),self._trigger("connectState",1,null)};self._socket.on("connect",connectHandler),self._socket.on("reconnect",connectHandler),self._socket.on("error",function(error){log.error([null,"Socket",null,"Connection has caught an exception ->"],error),self._trigger("error",error)}),self._socket.on("disconnect",function(){log.debug([null,"Socket",null,"Connection to signaling server has been closed"]),self.connected=!1,self._trigger("disconnect"),self._trigger("connectState",-1,null)}),self._socket.on("message",function(messageString){var message=JSON.parse(messageString);log.debug([null,"Socket",null,"Received message ->"],message),self._trigger("message",message)}),log.debug([null,"Socket",null,"Listening to io object events"])},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.1",Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach"},Skylink.prototype._hasMCU=!1,Skylink.prototype._groupMessageList=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.ROOM_LOCK,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE],Skylink.prototype._hasMCU=!1,Skylink.prototype._receiveOnly=!1,Skylink.prototype._processSigMessage=function(message){if(message.type===this._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++)this._processSingleMessage(message.lists[i])}else this._processSingleMessage(message)},Skylink.prototype._processSingleMessage=function(message){this._trigger("channelMessage",message);var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),log.debug([origin,null,null,"Received from peer ->"],message.type),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,null,null,"Ignoring message ->"],message.type);switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;default:log.error([message.mid,null,null,"Unsupported message ->"],message.type)}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,log.log(["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.sid,self._peerList)},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Approaching peer"],message.target),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid),self._socket.send({type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,
userInfo:self.getPeerInfo(),receiveOnly:self._receiveOnly,sessionType:self._mediaScreen?"screensharing":"stream",target:message.target})},Skylink.prototype._redirectHandler=function(message){if(log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]?(this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]?(this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)):log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]?(this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]?"ended"===message.status&&(this._trigger("streamEnded",targetMid,this.getPeerInfo(targetMid),!1,"screensharing"===message.sessionType),this._peerConnections[targetMid]?(this._peerConnections[targetMid].hasStream=!1,"screensharing"===message.sessionType&&(this._peerConnections[targetMid].hasScreen=!1)):log.log([targetMid,null,message.type,"Peer connection not found"])):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid,selfId=(this._user||{}).sid;selfId!==targetMid?(log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):log.log([targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setIceServers(message.pc_config),self._inRoom=!0,self._user.sid=message.sid,self._peerPriorityWeight=(new Date).getTime(),self._trigger("peerJoined",self._user.sid,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid),"number"==typeof message.tieBreaker&&(self._peerPriorityWeight=message.tieBreaker),self._mediaScreen&&null!==self._mediaScreen?self._trigger("incomingStream",self._user.sid,self._mediaScreen,!0,self.getPeerInfo()):self._mediaStream&&null!==self._mediaStream&&self._trigger("incomingStream",self._user.sid,self._mediaStream,!0,self.getPeerInfo()),self._socket.send({type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self.getPeerInfo(),receiveOnly:self._receiveOnly,sessionType:self._mediaScreen?"screensharing":"stream"})},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid;return log.log([targetMid,null,message.type,"Incoming peer have initiated handshake. Peer's information:"],message.userInfo),self._peerInformations[targetMid]?void log.log([targetMid,null,message.type,"Ignoring message as peer is already added"]):(self._addPeer(targetMid,{agent:message.agent,version:message.version,os:message.os},!1,!1,message.receiveOnly,"screensharing"===message.sessionType),self._peerInformations[targetMid]=message.userInfo||{},self._peerInformations[targetMid].agent={name:message.agent,version:message.version,os:message.os||""},"MCU"!==targetMid?self._trigger("peerJoined",targetMid,message.userInfo,!1):(log.info([targetMid,"RTCPeerConnection","MCU","MCU feature has been enabled"],message),log.log([targetMid,null,message.type,"MCU has joined"],message.userInfo),this._hasMCU=!0,this._trigger("serverPeerJoined",targetMid,this.SERVER_PEER_TYPE.MCU)),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._socket.send({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,receiveOnly:self._peerConnections[targetMid]?!!self._peerConnections[targetMid].receiveOnly:!1,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self.getPeerInfo(),target:targetMid,weight:self._peerPriorityWeight,sessionType:self._mediaScreen?"screensharing":"stream"}),void self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid))},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid;if(!self._peerInformations[targetMid])return void log.error([targetMid,null,null,"Peer does not have an existing session. Ignoring restart process."]);if(self._hasMCU)return void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1);if(self.lastRestart=message.lastRestart||Date.now()||function(){return+new Date},!self._peerConnections[targetMid])return void log.error([targetMid,null,null,"Peer does not have an existing connection. Unable to restart"]);"MCU"===targetMid&&(log.log([targetMid,null,message.type,"MCU has restarted its connection"]),self._hasMCU=!0),message.agent=message.agent?message.agent:"chrome",self._enableIceTrickle="boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:self._enableIceTrickle,self._enableDataChannel="boolean"==typeof message.enableDataChannel?message.enableDataChannel:self._enableDataChannel,self._peerInformations[targetMid]=message.userInfo||{},self._peerInformations[targetMid].agent={name:message.agent,version:message.version,os:message.os||""};var agent=(self.getPeerInfo(targetMid)||{}).agent||{};log.info([targetMid,"RTCPeerConnection",null,"Received restart request from peer"],message);var beOfferer=!1;"firefox"!==window.webrtcDetectedBrowser&&"firefox"===message.agent?(log.debug([targetMid,"RTCPeerConnection",null,"Restarting as offerer as peer cannot be offerer"],agent),beOfferer=!0):self._peerPriorityWeight<message.weight&&(beOfferer=!0),beOfferer?(log.debug([targetMid,"RTCPeerConnection",null,"Restarting negotiation"],agent),self._doOffer(targetMid,{agent:agent.name,version:agent.version,os:agent.os},!0)):(log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation"],agent),self._socket.send({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self.getPeerInfo(),target:targetMid,weight:-1,sessionType:self._mediaScreen?"screensharing":"stream"})),self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1),self._startPeerConnectionHealthCheck(targetMid,!1)},Skylink.prototype._welcomeHandler=function(message){var targetMid=message.mid,restartConn=!1,beOfferer=this._peerPriorityWeight<message.weight;if(log.log([targetMid,null,message.type,"Received peer's response to handshake initiation. Peer's information:"],message.userInfo),this._peerConnections[targetMid]){if(this._peerConnections[targetMid].setOffer&&!(message.weight<0))return void log.warn([targetMid,null,message.type,"Ignoring message as peer is already added"]);if(message.weight<0){if(log.log([targetMid,null,message.type,"Peer's weight is lower than 0. Proceeding with offer"],message.weight),restartConn=!0,beOfferer=!0,-2===message.weight)return void this._restartHandler(message)}else{if(!beOfferer)return void log.log([targetMid,null,message.type,"Peer's generated weight is lesser than user's. Ignoring message"],this._peerPriorityWeight+" > "+message.weight);log.log([targetMid,null,message.type,"Peer's generated weight is higher than user's. Proceeding with offer"],this._peerPriorityWeight+" < "+message.weight),restartConn=!0}}message.agent=message.agent?message.agent:"chrome",this._enableIceTrickle="boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:this._enableIceTrickle,this._enableDataChannel="boolean"==typeof message.enableDataChannel?message.enableDataChannel:this._enableDataChannel,"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection","MCU","MCU feature is currently enabled"],message),log.log([targetMid,null,message.type,"MCU has "+(message.weight>-1?"joined and ":"")+" responded"]),this._hasMCU=!0,this._trigger("serverPeerJoined",targetMid,this.SERVER_PEER_TYPE.MCU),log.log([targetMid,null,message.type,"Always setting as offerer because peer is MCU"]),beOfferer=!0):"firefox"===window.webrtcDetectedBrowser&&"firefox"!==message.agent&&(beOfferer=!1),this._hasMCU&&(log.log([targetMid,null,message.type,"Always setting as offerer because MCU is present"]),beOfferer=!0),this._peerInformations[targetMid]||(this._peerInformations[targetMid]=message.userInfo||{},this._peerInformations[targetMid].agent={name:message.agent,version:message.version,os:message.os||""},"MCU"!==targetMid&&this._trigger("peerJoined",targetMid,message.userInfo,!1),this._trigger("handshakeProgress",this.HANDSHAKE_PROGRESS.WELCOME,targetMid)),log.debug([targetMid,"RTCPeerConnection",null,"Should peer start the connection"],beOfferer),this._addPeer(targetMid,{agent:message.agent,version:message.version,os:message.os},beOfferer,restartConn,message.receiveOnly,"screensharing"===message.sessionType),beOfferer||(log.debug([targetMid,"RTCPeerConnection",null,"Peer has to start the connection. Sending restart message"],beOfferer),this._socket.send({type:this._SIG_MESSAGE_TYPE.WELCOME,mid:this._user.sid,rid:this._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:this.getPeerInfo(),target:targetMid,weight:-1,sessionType:this._mediaScreen?"screensharing":"stream"}))},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],message.sdp);var offer=new window.RTCSessionDescription({type:message.type,sdp:message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void log.warn([targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend}):void pc.setRemoteDescription(offer,function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,message.type,"Failed setting remote description:"],error)})},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid,pc=this._peerConnections[targetMid];log.log([targetMid,null,message.type,"Received candidate from peer. Candidate config:"],{sdp:message.sdp,target:message.target,candidate:message.candidate,label:message.label});var messageCan=message.candidate.split(" "),canType=messageCan[7];log.log([targetMid,null,message.type,"Candidate type:"],canType);var index=message.label,candidate=new window.RTCIceCandidate({sdpMLineIndex:index,candidate:message.candidate,sdpMid:message.id});if(pc){if(pc.signalingState===this.PEER_CONNECTION_STATE.CLOSED)return void log.warn([targetMid,null,message.type,"Peer connection state is closed. Not adding candidate"]);"local"===pc.setOffer&&"remote"===pc.setAnswer||"local"===pc.setAnswer&&"remote"===pc.setOffer?(pc.addIceCandidate(candidate,this._onAddIceCandidateSuccess,this._onAddIceCandidateFailure),log.debug([targetMid,"RTCIceCandidate",message.type,"Added candidate"],candidate)):this._addIceCandidateToQueue(targetMid,candidate)}else log.debug([targetMid,"RTCIceCandidate",message.type,"Not adding candidate as peer connection not present"]),this._addIceCandidateToQueue(targetMid,candidate);this._addedCandidates[targetMid]||(this._addedCandidates[targetMid]={relay:[],host:[],srflx:[]}),this._addedCandidates[targetMid][canType]||(this._addedCandidates[targetMid][canType]=[]),this._addedCandidates[targetMid][canType].push("remote:"+messageCan[4]+("0"!==messageCan[5]?":"+messageCan[5]:"")+(messageCan[2]?"?transport="+messageCan[2].toLowerCase():""))},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],message.sdp);var pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]);var answer=new window.RTCSessionDescription({type:message.type,sdp:message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),"moz"===window.webrtcDetectedType&&"MCU"===targetMid&&(answer.sdp=answer.sdp.replace(/ generation 0/g,""),answer.sdp=answer.sdp.replace(/ udp /g," UDP ")),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER?void log.warn([targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart}):void pc.setRemoteDescription(answer,function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState})})},Skylink.prototype.sendMessage=function(message,targetPeerId){var i,listOfPeers=({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE},Object.keys(this._peerConnections)),isPrivate=!1;for(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),isPrivate||(log.log([null,"Socket",null,"Broadcasting message to peers"]),this._socket.send({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE})),i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];"MCU"!==peerId&&isPrivate&&(log.log([peerId,"Socket",null,"Sending message to peer"]),this._socket.send({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE}))}this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0)},Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264"},Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus"},Skylink.prototype._selectedAudioCodec="auto",Skylink.prototype._selectedVideoCodec="auto",Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120,aspectRatio:"4:3"},HQVGA:{width:240,height:160,aspectRatio:"3:2"},QVGA:{width:320,height:240,aspectRatio:"4:3"},WQVGA:{width:384,height:240,aspectRatio:"16:10"},HVGA:{width:480,height:320,aspectRatio:"3:2"},VGA:{width:640,height:480,aspectRatio:"4:3"},WVGA:{width:768,height:480,aspectRatio:"16:10"},FWVGA:{width:854,height:480,aspectRatio:"16:9"},SVGA:{width:800,height:600,aspectRatio:"4:3"},DVGA:{width:960,height:640,aspectRatio:"3:2"},WSVGA:{width:1024,height:576,aspectRatio:"16:9"},HD:{width:1280,height:720,aspectRatio:"16:9"},HDPLUS:{width:1600,height:900,aspectRatio:"16:9"},FHD:{width:1920,height:1080,aspectRatio:"16:9"},QHD:{width:2560,height:1440,aspectRatio:"16:9"},WQXGAPLUS:{width:3200,height:1800,aspectRatio:"16:9"},UHD:{width:3840,height:2160,aspectRatio:"16:9"},UHDPLUS:{width:5120,height:2880,aspectRatio:"16:9"},FUHD:{width:7680,height:4320,aspectRatio:"16:9"},QUHD:{width:15360,height:8640,aspectRatio:"16:9"}},Skylink.prototype._mediaStream=null,Skylink.prototype._mediaScreen=null,Skylink.prototype._mediaScreenClone=null,Skylink.prototype._defaultStreamSettings={audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50},bandwidth:{audio:50,video:256,data:1638400}},Skylink.prototype._streamSettings={},Skylink.prototype._screenSharingStreamSettings={video:{screenshare:!0}},Skylink.prototype._screenSharingAvailable=!1,Skylink.prototype._getUserMediaSettings={},Skylink.prototype._mediaStreamsStatus={},Skylink.prototype._audioFallback=!1,Skylink.prototype._onUserMediaSuccess=function(stream,isScreenSharing){var self=this;log.log([null,"MediaStream",stream.id,"User has granted access to local media"],stream);var streamEnded=function(){log.log([null,"MediaStream",stream.id,"Local mediastream has ended"],{inRoom:self._inRoom,currentTime:stream.currentTime,ended:"boolean"==typeof stream.active?stream.active:stream.ended}),self._inRoom&&(log.debug([null,"MediaStream",stream.id,"Sending mediastream ended status"]),self._socket.send({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.sid,rid:self._room.id,cid:self._key,sessionType:isScreenSharing?"screensharing":"stream",status:"ended"})),self._trigger("streamEnded",self._user.sid||null,self.getPeerInfo(),!0,!!isScreenSharing)};"chrome"===window.webrtcDetectedBrowser||"opera"===window.webrtcDetectedBrowser?stream.oninactive=streamEnded:"firefox"===window.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){"undefined"==typeof stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),streamEnded()):stream.recordedTime=stream.currentTime},1e3):stream.onended=streamEnded,isScreenSharing?self._mediaScreen=stream:self._mediaStream=stream,self._muteLocalMediaStreams(),self._wait(function(){self._trigger("mediaAccessSuccess",stream,!!isScreenSharing)},function(){return isScreenSharing?self._mediaScreen&&null!==self._mediaScreen:self._mediaStream&&null!==self._mediaStream})},Skylink.prototype._onUserMediaError=function(error,isScreenSharing,audioFallback){var self=this,hasAudioVideoRequest=!!self._streamSettings.video&&!!self._streamSettings.audio;self._audioFallback&&hasAudioVideoRequest&&audioFallback?(self._streamSettings.video=!1,self._getUserMediaSettings.video=!1,log.debug([null,"MediaStream",null,"Falling back to audio stream call"]),self._trigger("mediaAccessFallback",{error:error,diff:null},0,!1,!0),window.getUserMedia({audio:!0},function(stream){self._onUserMediaSuccess(stream),self._trigger("mediaAccessFallback",{error:null,diff:{video:{expected:1,received:stream.getVideoTracks().length},audio:{expected:1,received:stream.getAudioTracks().length}}},1,!1,!0)},function(error){log.error([null,"MediaStream",null,"Failed retrieving audio in audio fallback:"],error),self._trigger("mediaAccessError",error,!!isScreenSharing,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},-1,!1,!0)})):(log.error([null,"MediaStream",null,"Failed retrieving stream:"],error),self._trigger("mediaAccessError",error,!!isScreenSharing,!1))},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this;if("MCU"!==targetMid){if(!self._peerInformations[targetMid])return void log.error([targetMid,"MediaStream",stream.id,"Received remote stream when peer is not connected. Ignoring stream ->"],stream);if(!self._peerInformations[targetMid].settings.audio&&!self._peerInformations[targetMid].settings.video&&!isScreenSharing)return void log.log([targetMid,"MediaStream",stream.id,"Receive remote stream but ignoring stream as it is empty ->"],stream);log.log([targetMid,"MediaStream",stream.id,"Received remote stream ->"],stream),isScreenSharing&&log.log([targetMid,"MediaStream",stream.id,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid),!!isScreenSharing)}else log.log([targetMid,null,null,"MCU is listening"])},Skylink.prototype._parseAudioStreamSettings=function(audioOptions){audioOptions="object"==typeof audioOptions?audioOptions:!!audioOptions;var hasOptional=!1;if(audioOptions!==!1){audioOptions="boolean"==typeof audioOptions?{}:audioOptions;var tempAudioOptions={};tempAudioOptions.stereo=!!audioOptions.stereo,tempAudioOptions.optional=[],Array.isArray(audioOptions.optional)&&(tempAudioOptions.optional=audioOptions.optional,hasOptional=!0),audioOptions=tempAudioOptions}var userMedia="object"==typeof audioOptions?!0:audioOptions;return hasOptional&&(userMedia={optional:audioOptions.optional}),{settings:audioOptions,userMedia:userMedia}},Skylink.prototype._parseVideoStreamSettings=function(videoOptions){videoOptions="object"==typeof videoOptions?videoOptions:!!videoOptions;var userMedia=!1;if(videoOptions!==!1){videoOptions="boolean"==typeof videoOptions?{resolution:{}}:videoOptions;var tempVideoOptions={};videoOptions.resolution=videoOptions.resolution||{},tempVideoOptions.resolution=tempVideoOptions.resolution||{},tempVideoOptions.resolution.width=videoOptions.resolution.width||this._defaultStreamSettings.video.resolution.width,tempVideoOptions.resolution.height=videoOptions.resolution.height||this._defaultStreamSettings.video.resolution.height,tempVideoOptions.frameRate=videoOptions.frameRate||this._defaultStreamSettings.video.frameRate,tempVideoOptions.screenshare=!1,tempVideoOptions.optional=[],Array.isArray(videoOptions.optional)&&(tempVideoOptions.optional=videoOptions.optional),videoOptions=tempVideoOptions,userMedia={mandatory:{maxWidth:videoOptions.resolution.width,maxHeight:videoOptions.resolution.height,maxFrameRate:videoOptions.frameRate},optional:tempVideoOptions.optional},"plugin"===window.webrtcDetectedType&&delete userMedia.mandatory.maxFrameRate,"edge"===window.webrtcDetectedBrowser&&(userMedia=!0)}return{settings:videoOptions,userMedia:userMedia}},Skylink.prototype._parseBandwidthSettings=function(bwOptions){bwOptions="object"==typeof bwOptions?bwOptions:{},bwOptions.audio="number"==typeof bwOptions.audio?bwOptions.audio:50,bwOptions.video="number"==typeof bwOptions.video?bwOptions.video:256,bwOptions.data="number"==typeof bwOptions.data?bwOptions.data:1638400,this._streamSettings.bandwidth=bwOptions},Skylink.prototype._parseMutedSettings=function(options){options="object"==typeof options?options:{audio:!1,video:!1};var updateAudioMuted="object"==typeof options.audio?!!options.audio.mute:!options.audio,updateVideoMuted="object"==typeof options.video?!!options.video.mute:!options.video;return{audioMuted:updateAudioMuted,videoMuted:updateVideoMuted}},Skylink.prototype._parseDefaultMediaStreamSettings=function(options){options=options||{},log.debug("Parsing stream settings. Default stream options:",options),options.maxWidth="number"==typeof options.maxWidth?options.maxWidth:640,options.maxHeight="number"==typeof options.maxHeight?options.maxHeight:480,this._defaultStreamSettings.video.resolution.width=options.maxWidth,this._defaultStreamSettings.video.resolution.height=options.maxHeight,log.debug("Parsed default media stream settings",this._defaultStreamSettings)},Skylink.prototype._parseMediaStreamSettings=function(options){options=options||{},log.debug("Parsing stream settings. Stream options:",options);var audioSettings=this._parseAudioStreamSettings(options.audio);this._streamSettings.audio=audioSettings.settings,this._getUserMediaSettings.audio=audioSettings.userMedia;var videoSettings=this._parseVideoStreamSettings(options.video);this._streamSettings.video=videoSettings.settings,this._getUserMediaSettings.video=videoSettings.userMedia;var mutedSettings=this._parseMutedSettings(options);this._mediaStreamsStatus=mutedSettings,log.debug("Parsed user media stream settings",this._streamSettings),log.debug("User media status:",this._mediaStreamsStatus)},Skylink.prototype._addLocalMediaStreams=function(peerId){try{log.log([peerId,null,null,"Adding local stream"]);var pc=this._peerConnections[peerId];if(pc)if(pc.signalingState!==this.PEER_CONNECTION_STATE.CLOSED){for(var hasStream=!1,hasScreen=!1,streams=pc.getLocalStreams(),i=0;i<streams.length;i++)pc.removeStream(streams[i]);this._mediaStream&&null!==this._mediaStream&&(hasStream=!0),this._mediaScreen&&null!==this._mediaScreen&&(hasScreen=!0),hasScreen?(log.debug([peerId,"MediaStream",null,"Sending screen"],this._mediaScreen),pc.addStream(this._mediaScreen)):hasStream?(log.debug([peerId,"MediaStream",null,"Sending stream"],this._mediaStream),pc.addStream(this._mediaStream)):log.warn([peerId,"MediaStream",null,"No media to send. Will be only receiving"])}else log.warn([peerId,"MediaStream",this._mediaStream,"Not adding stream as signalingState is closed"]);else log.warn([peerId,"MediaStream",this._mediaStream,"Not adding stream as peerconnection object does not exists"])}catch(error){(error.message||"").indexOf("already added")>-1?log.warn([peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):log.error([peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype.stopStream=function(){this._stopLocalMediaStreams({userMedia:!0})},Skylink.prototype._muteLocalMediaStreams=function(){var audioTracks,videoTracks,a,v,hasAudioTracks=!1,hasVideoTracks=!1;if(this._mediaStream&&null!==this._mediaStream){for(audioTracks=this._mediaStream.getAudioTracks(),videoTracks=this._mediaStream.getVideoTracks(),hasAudioTracks=audioTracks.length>0||hasAudioTracks,hasVideoTracks=videoTracks.length>0||hasVideoTracks,a=0;a<audioTracks.length;a++)this._mediaStreamsStatus.audioMuted?audioTracks[a].enabled=!1:audioTracks[a].enabled=!0;for(v=0;v<videoTracks.length;v++)this._mediaStreamsStatus.videoMuted?videoTracks[v].enabled=!1:videoTracks[v].enabled=!0}if(this._mediaScreen&&null!==this._mediaScreen){for(audioTracks=this._mediaScreen.getAudioTracks(),videoTracks=this._mediaScreen.getVideoTracks(),hasAudioTracks=hasAudioTracks||audioTracks.length>0,hasVideoTracks=hasVideoTracks||videoTracks.length>0,a=0;a<audioTracks.length;a++)this._mediaStreamsStatus.audioMuted?audioTracks[a].enabled=!1:audioTracks[a].enabled=!0;for(v=0;v<videoTracks.length;v++)this._mediaStreamsStatus.videoMuted?videoTracks[v].enabled=!1:videoTracks[v].enabled=!0}if(this._mediaScreenClone&&null!==this._mediaScreenClone)for(videoTracks=this._mediaScreen.getVideoTracks(),hasVideoTracks=hasVideoTracks||videoTracks.length>0,v=0;v<videoTracks.length;v++)this._mediaStreamsStatus.videoMuted?videoTracks[v].enabled=!1:videoTracks[v].enabled=!0;return hasAudioTracks||(this._mediaStreamsStatus.audioMuted=!0,this._streamSettings.audio=!1),hasVideoTracks||(this._mediaStreamsStatus.videoMuted=!0,this._streamSettings.video=!1),log.log("Update to muted status ->",this._mediaStreamsStatus),{hasAudioTracks:hasAudioTracks,hasVideoTracks:hasVideoTracks}},Skylink.prototype._stopLocalMediaStreams=function(options){var stopUserMedia=!1,stopScreenshare=!1,triggerStopped=!1;"object"==typeof options&&(stopUserMedia=options.userMedia===!0,stopScreenshare=options.screenshare===!0);var stopTracksFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),i=0;i<audioTracks.length;i++)audioTracks[i].stop();for(var j=0;j<videoTracks.length;j++)videoTracks[j].stop()},stopFn=function(stream,name){if(["chrome","opera","firefox"].indexOf(window.webrtcDetectedBrowser)>-1)stopTracksFn(stream);else try{stream.stop()}catch(error){log.warn("Failed stopping MediaStreamTracks for "+name+". Stopping MediaStream instead",error),stopTracksFn(stream)}};stopScreenshare?(log.log([null,"MediaStream",self._selectedRoom,"Stopping screensharing MediaStream"]),this._mediaScreen&&null!==this._mediaScreen&&(stopFn(this._mediaScreen,"_mediaScreen"),this._mediaScreen=null,triggerStopped=!0),this._mediaScreenClone&&null!==this._mediaScreenClone&&(stopFn(this._mediaScreenClone,"_mediaScreenClone"),this._mediaScreenClone=null),triggerStopped&&this._trigger("mediaAccessStopped",!0)):log.log([null,"MediaStream",self._selectedRoom,"Screensharing MediaStream will not be stopped"]),stopUserMedia?(log.log([null,"MediaStream",self._selectedRoom,"Stopping user's MediaStream"]),this._mediaStream&&null!==this._mediaStream&&(stopFn(this._mediaStream,"_mediaStream"),this._mediaStream=null,triggerStopped=!0),triggerStopped&&this._trigger("mediaAccessStopped",!1)):log.log([null,"MediaStream",self._selectedRoom,"User's MediaStream will not be stopped"])},Skylink.prototype._waitForLocalMediaStream=function(callback,options){var self=this;options=options||{},options.manualGetUserMedia===!0&&self._trigger("mediaAccessRequired");var requireAudio=!!options.audio,requireVideo=!!options.video;if(log.log("Requested audio:",requireAudio),log.log("Requested video:",requireVideo),!requireAudio&&!requireVideo&&!options.manualGetUserMedia)return options.audio===!1&&options.video===!1&&self._parseMediaStreamSettings(options),void callback(null);if(options.manualGetUserMedia||!options.audio&&!options.video||self.getUserMedia({audio:options.audio,video:options.video},function(error,success){error?callback(error):callback(null,success)}),self.stopStream(),options.manualGetUserMedia===!0){var current50Block=0,mediaAccessRequiredFailure=!1;self._wait(function(){mediaAccessRequiredFailure===!0?self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1):callback(null,self._mediaStream)},function(){return current50Block+=1,600===current50Block?(mediaAccessRequiredFailure=!0,!0):self._mediaStream&&null!==self._mediaStream?!0:void 0},50)}},Skylink.prototype.getUserMedia=function(options,callback){var errorMsg,self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if("undefined"!=typeof options)return errorMsg="Please provide a valid options",log.error(errorMsg,options),
void("function"==typeof callback&&callback(new Error(errorMsg),null));options={audio:!0,video:!0}}else if(!options.audio&&!options.video)return errorMsg="Please select audio or video",log.error(errorMsg,options),void("function"==typeof callback&&callback(new Error(errorMsg),null));self._parseMediaStreamSettings(options),options.audio!==!1||options.video!==!1?(self.stopStream(),setTimeout(function(){try{if("function"==typeof callback){var mediaAccessErrorFn=function(error){callback(error,null),self.off("mediaAccessSuccess",mediaAccessSuccessFn)},mediaAccessSuccessFn=function(stream){callback(null,stream),self.off("mediaAccessError",mediaAccessErrorFn)};self.once("mediaAccessError",mediaAccessErrorFn),self.once("mediaAccessSuccess",mediaAccessSuccessFn)}window.getUserMedia(self._getUserMediaSettings,function(stream){var isSuccess=!1,requireAudio=!!options.audio,requireVideo=!!options.video,hasAudio=!requireAudio,hasVideo=!requireVideo;if(stream&&null!==stream){var notSameTracksError=new Error("Expected audio tracks length with "+(requireAudio?"1":"0")+" and video tracks length with "+(requireVideo?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length);requireAudio&&(hasAudio=stream.getAudioTracks().length>0),requireVideo&&(hasVideo=stream.getVideoTracks().length>0),hasAudio&&hasVideo&&(isSuccess=!0),isSuccess||self._trigger("mediaAccessFallback",{error:notSameTracksError,diff:{video:{expected:requireAudio?1:0,received:stream.getVideoTracks().length},audio:{expected:requireVideo?1:0,received:stream.getAudioTracks().length}}},1,!1,!1),self._onUserMediaSuccess(stream)}},function(error){self._onUserMediaError(error,!1,!0)})}catch(error){self._onUserMediaError(error,!1,!0)}},"firefox"===window.webrtcDetectedBrowser?500:1)):log.warn([null,"MediaStream",null,"Not retrieving stream"])},Skylink.prototype.sendStream=function(stream,callback){var self=this,restartCount=0,peerCount=Object.keys(self._peerConnections).length;if("object"!=typeof stream||null===stream){var error="Provided stream settings is invalid";return log.error(error,stream),void("function"==typeof callback&&callback(new Error(error),null))}var hasNoPeers=0===Object.keys(self._peerConnections).length;"function"==typeof stream.getAudioTracks||"function"==typeof stream.getVideoTracks?(self.stopStream(),self._streamSettings.audio=stream.getAudioTracks().length>0,self._streamSettings.video=stream.getVideoTracks().length>0,self._mediaStreamsStatus.audioMuted=self._streamSettings.audio===!1,self._mediaStreamsStatus.videoMuted=self._streamSettings.video===!1,self._inRoom&&self.once("mediaAccessSuccess",function(stream){if(self._hasMCU)self._restartMCUConnection();else{self._trigger("incomingStream",self._user.sid,self._mediaStream,!0,self.getPeerInfo(),!1);for(var peer in self._peerConnections)self._peerConnections.hasOwnProperty(peer)&&self._restartPeerConnection(peer,!0,!1,null,!0)}self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)}),self._mediaStream!==stream&&self._onUserMediaSuccess(stream),"function"!=typeof callback||hasNoPeers||self.once("peerRestart",function(peerId,peerInfo,isSelfInitiatedRestart){log.log([null,"MediaStream",stream.id,"Stream was sent. Firing callback"],stream),callback(null,stream),restartCount=0},function(peerId,peerInfo,isSelfInitiatedRestart){return isSelfInitiatedRestart&&(restartCount++,restartCount===peerCount)?!0:!1},!1),"function"==typeof callback&&hasNoPeers&&callback(null,self._mediaStream)):("function"!=typeof callback||hasNoPeers||self.once("peerRestart",function(peerId,peerInfo,isSelfInitiatedRestart){log.log([null,"MediaStream",stream.id,"Stream was sent. Firing callback"],stream),callback(null,stream),restartCount=0},function(peerId,peerInfo,isSelfInitiatedRestart){return isSelfInitiatedRestart&&(restartCount++,restartCount===peerCount)?!0:!1},!1),self._inRoom&&self.once("mediaAccessSuccess",function(stream){if(self._hasMCU)self._restartMCUConnection();else{self._trigger("incomingStream",self._user.sid,self._mediaStream,!0,self.getPeerInfo(),!1);for(var peer in self._peerConnections)self._peerConnections.hasOwnProperty(peer)&&self._restartPeerConnection(peer,!0,!1,null,!0)}self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)}),self._waitForLocalMediaStream(function(error){error?callback(error,null):"function"==typeof callback&&hasNoPeers&&callback(null,self._mediaStream)},stream))},Skylink.prototype.muteStream=function(options){var self=this,hasAudioError=!1,hasVideoError=!1;if("object"!=typeof options)return void log.error("Provided settings is not an object");if(!(self._mediaStream&&null!==self._mediaStream||self._mediaScreen&&null!==self._mediaScreen))return void log.warn("No streams are available to mute / unmute!");"boolean"==typeof options.audioMuted&&(self._streamSettings.audio===!1?(log.error("No audio available to mute / unmute"),hasAudioError=!0):options.audioMuted?self._mediaStreamsStatus.audioMuted=!0:self._mediaStreamsStatus.audioMuted=!1),"boolean"==typeof options.videoMuted&&(self._streamSettings.video===!1?(log.error("No video available to mute / unmute"),hasVideoError=!0):options.videoMuted?self._mediaStreamsStatus.videoMuted=!0:self._mediaStreamsStatus.videoMuted=!1);var hasTracksOption=self._muteLocalMediaStreams();self._inRoom&&(hasTracksOption.hasVideoTracks&&self._socket.send({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.sid,rid:self._room.id,muted:self._mediaStreamsStatus.videoMuted}),hasTracksOption.hasAudioTracks&&setTimeout(function(){self._socket.send({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.sid,rid:self._room.id,muted:self._mediaStreamsStatus.audioMuted})},1050),hasAudioError&&hasVideoError||self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),hasAudioError&&hasVideoError||self._trigger("streamMuted",self._user.sid||null,self.getPeerInfo(),!0,!!self._mediaScreen&&null!==self._mediaScreen)},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1})},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0})},Skylink.prototype.shareScreen=function(enableAudio,callback){var self=this,hasAudio=!1,settings={video:{mediaSource:"window"}};"function"==typeof enableAudio&&(callback=enableAudio,enableAudio=!0),"boolean"!=typeof enableAudio&&(enableAudio=!0);var triggerSuccessFn=function(sStream){hasAudio?"object"==typeof self._streamSettings.audio?self._screenSharingStreamSettings.audio={stereo:!!self._streamSettings.audio.stereo}:self._screenSharingStreamSettings.audio=!0:(log.warn("This screensharing session will not support audio streaming"),self._screenSharingStreamSettings.audio=!1);var requireAudio=enableAudio===!0,requireVideo=!0,checkAudio=!requireAudio,checkVideo=!requireVideo,notSameTracksError=new Error("Expected audio tracks length with "+(requireAudio?"1":"0")+" and video tracks length with "+(requireVideo?"1":"0")+" but received audio tracks length with "+sStream.getAudioTracks().length+" and video tracks length with "+sStream.getVideoTracks().length);requireAudio&&(checkAudio=sStream.getAudioTracks().length>0),requireVideo&&(checkVideo=sStream.getVideoTracks().length>0),checkVideo?(checkAudio||self._trigger("mediaAccessFallback",{error:notSameTracksError,diff:{video:{expected:1,received:sStream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:sStream.getAudioTracks().length}}},1,!0,!1),self._onUserMediaSuccess(sStream,!0)):self._onUserMediaError(notSameTracksError,!0),self._timestamp.screen=!0};"firefox"===window.webrtcDetectedBrowser&&(settings.audio=!!enableAudio);var throttleFn=function(fn,wait){self._timestamp.func||(self._timestamp.func=self._timestamp.now-wait);var now=Date.now();!self._timestamp.screen&&now-self._timestamp.func<wait||(fn(),self._timestamp.screen=!1,self._timestamp.func=now)},toShareScreen=function(){try{window.getUserMedia(settings,function(stream){self.once("mediaAccessSuccess",function(stream){if(self._inRoom)if(self._hasMCU)self._restartMCUConnection();else{self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!1);for(var peer in self._peerConnections)self._peerConnections.hasOwnProperty(peer)&&self._restartPeerConnection(peer,!0,!1,null,!0)}else"function"==typeof callback&&callback(null,stream)},function(stream,isScreenSharing){return isScreenSharing}),"firefox"!==window.webrtcDetectedBrowser&&enableAudio?window.getUserMedia({audio:!0},function(audioStream){try{audioStream.addTrack(stream.getVideoTracks()[0]),self._mediaScreenClone=stream,hasAudio=!0,triggerSuccessFn(audioStream,!0)}catch(error){log.error("Failed retrieving audio stream for screensharing stream",error),triggerSuccessFn(stream,!0)}},function(error){log.error("Failed retrieving audio stream for screensharing stream",error),triggerSuccessFn(stream,!0)}):(hasAudio="firefox"===window.webrtcDetectedBrowser?enableAudio:!1,triggerSuccessFn(stream,!0))},function(error){self._onUserMediaError(error,!0,!1),self._timestamp.screen=!0,"function"==typeof callback&&callback(error,null)})}catch(error){self._onUserMediaError(error,!0,!1),"function"==typeof callback&&callback(error,null)}};throttleFn(toShareScreen,1e4)},Skylink.prototype.stopScreen=function(){if(this._mediaScreen&&null!==this._mediaScreen&&(this._stopLocalMediaStreams({screenshare:!0}),this._inRoom))if(this._hasMCU)this._restartMCUConnection();else{this._mediaStream&&null!==this._mediaStream&&this._trigger("incomingStream",this._user.sid,this._mediaStream,!0,this.getPeerInfo(),!1);for(var peer in this._peerConnections)this._peerConnections.hasOwnProperty(peer)&&this._restartPeerConnection(peer,!0,!1,null,!0)}},Skylink.prototype._addSDPStereo=function(sdpLines){var i,j,line,opusRtmpLineIndex=0,opusLineFound=!1,opusPayload=0,fmtpLineFound=!1;for(i=0;i<sdpLines.length;i+=1)if(line=sdpLines[i],0===line.indexOf("a=rtpmap:")){var parts=line.split(" ");if(0===parts[1].indexOf("opus/48000/")){opusLineFound=!0,opusPayload=parts[0].split(":")[1],opusRtmpLineIndex=i;break}}if(opusLineFound){for(log.debug([null,"SDP",null,"OPUS line is found. Enabling stereo"]),j=0;j<sdpLines.length;j+=1)if(line=sdpLines[j],0===line.indexOf("a=fmtp:"+opusPayload)){fmtpLineFound=!0,sdpLines[j]+="; stereo=1";break}fmtpLineFound||sdpLines.splice(opusRtmpLineIndex,0,"a=fmtp:"+opusPayload+" stereo=1")}return sdpLines},Skylink.prototype._setSDPVideoResolution=function(sdpLines){var i,j,k,line,video=this._streamSettings.video,frameRate=video.frameRate||50,videoLineFound=!1,videoLineIndex=0,fmtpPayloads=[],sdpLineData="max-fr="+frameRate+"; max-recv-width=320; max-recv-height=160";for(i=0;i<sdpLines.length;i+=1)if(line=sdpLines[i],0===line.indexOf("a=video")||0===line.indexOf("m=video")){videoLineFound=!0,videoLineIndex=i,fmtpPayloads=line.split(" "),fmtpPayloads.splice(0,3);break}if(videoLineFound){for(j=0;j<fmtpPayloads.length;j+=1){var payload=fmtpPayloads[j],rtpmapLineIndex=0,fmtpLineIndex=0,fmtpLineFound=!1,ignore=!1;for(k=0;k<sdpLines.length;k+=1){if(line=sdpLines[k],0===line.indexOf("a=rtpmap:"+payload)){if(!(line.indexOf("VP8")>0||line.indexOf("H264")>0)){ignore=!0;break}rtpmapLineIndex=k}0===line.indexOf("a=fmtp:"+payload)&&(fmtpLineFound=!0,fmtpLineIndex=k)}ignore||(fmtpLineFound?sdpLines[fmtpLineIndex]+=";"+sdpLineData:sdpLines.splice(rtpmapLineIndex+1,0,"a=fmtp:"+payload+" "+sdpLineData))}log.debug([null,"SDP",null,"Setting video resolution (broken)"])}return sdpLines},Skylink.prototype._setSDPBitrate=function(sdpLines,settings){var i,j,k,bandwidth=this._streamSettings.bandwidth;!!(settings||{}).audio,!!(settings||{}).video;for(i=0;i<sdpLines.length;i+=1)if(0===sdpLines[i].indexOf("a=audio")||0===sdpLines[i].indexOf("m=audio")){sdpLines.splice(i+1,0,"b=AS:"+bandwidth.audio),log.debug([null,"SDP",null,"Setting audio bitrate ("+bandwidth.audio+")"],i);break}for(j=0;j<sdpLines.length;j+=1)if(0===sdpLines[j].indexOf("a=video")||0===sdpLines[j].indexOf("m=video")){sdpLines.splice(j+1,0,"b=AS:"+bandwidth.video),log.debug([null,"SDP",null,"Setting video bitrate ("+bandwidth.video+")"],j);break}for(k=0;k<sdpLines.length;k+=1)if(0===sdpLines[k].indexOf("a=application")||0===sdpLines[k].indexOf("m=application")){sdpLines.splice(k+1,0,"b=AS:"+bandwidth.data),log.debug([null,"SDP",null,"Setting data bitrate ("+bandwidth.data+")"],k);break}return sdpLines},Skylink.prototype._setSDPVideoCodec=function(sdpLines){log.log("Setting video codec",this._selectedVideoCodec);var i,j,line,codecFound=!1,payload=0;for(i=0;i<sdpLines.length;i+=1)if(line=sdpLines[i],0===line.indexOf("a=rtpmap:")&&line.indexOf(this._selectedVideoCodec)>0){codecFound=!0,payload=line.split(":")[1].split(" ")[0];break}if(codecFound)for(j=0;j<sdpLines.length;j+=1)if(line=sdpLines[j],0===line.indexOf("m=video")||0===line.indexOf("a=video")){var parts=line.split(" "),payloads=line.split(" ");payloads.splice(0,3);var selectedPayloadIndex=payloads.indexOf(payload);if(-1===selectedPayloadIndex)payloads.splice(0,0,payload);else{var first=payloads[0];payloads[0]=payload,payloads[selectedPayloadIndex]=first}sdpLines[j]=parts[0]+" "+parts[1]+" "+parts[2]+" "+payloads.join(" ");break}return sdpLines},Skylink.prototype._setSDPAudioCodec=function(sdpLines){log.log("Setting audio codec",this._selectedAudioCodec);var i,j,line,codecFound=!1,payload=0;for(i=0;i<sdpLines.length;i+=1)line=sdpLines[i],0===line.indexOf("a=rtpmap:")&&line.indexOf(this._selectedAudioCodec)>0&&(codecFound=!0,payload=line.split(":")[1].split(" ")[0]);if(codecFound)for(j=0;j<sdpLines.length;j+=1)if(line=sdpLines[j],0===line.indexOf("m=audio")||0===line.indexOf("a=audio")){var parts=line.split(" "),payloads=line.split(" ");payloads.splice(0,3);var selectedPayloadIndex=payloads.indexOf(payload);if(-1===selectedPayloadIndex)payloads.splice(0,0,payload);else{var first=payloads[0];payloads[0]=payload,payloads[selectedPayloadIndex]=first}sdpLines[j]=parts[0]+" "+parts[1]+" "+parts[2]+" "+payloads.join(" ");break}return sdpLines},Skylink.prototype._removeSDPFirefoxH264Pref=function(sdpLines){var invalidLineIndex=sdpLines.indexOf("a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1");return invalidLineIndex>-1&&(log.debug([null,"SDP",null,"Firefox H264 invalid pref found:"],invalidLineIndex),sdpLines.splice(invalidLineIndex,1)),sdpLines},Skylink.prototype._addSDPSsrcFirefoxAnswer=function(targetMid,sdp){var self=this,agent=self.getPeerInfo(targetMid).agent,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,"RTCSessionDesription","answer","Peer connection object not found. Unable to parse answer session description for peer"]);var updatedSdp=sdp;if("firefox"===window.webrtcDetectedBrowser&&"firefox"!==agent.name&&updatedSdp.indexOf("a=msid-semantic:WMS *")>0){var i,sdpLines=updatedSdp.split("\r\n"),streamId="",replaceSSRCSemantic=-1,trackId="",parseTracksSSRC=function(track){for(i=0,trackId="";i<sdpLines.length;i++)if(trackId){if(0===sdpLines[i].indexOf("a=ssrc:")){var ssrcId=sdpLines[i].split(":")[1].split(" ")[0];sdpLines.splice(i+1,0,"a=ssrc:"+ssrcId+" msid:"+streamId+" "+trackId,"a=ssrc:"+ssrcId+" mslabel:default","a=ssrc:"+ssrcId+" label:"+trackId);break}if(0===sdpLines[i].indexOf("a=mid:"))break}else if(0===sdpLines[i].indexOf("a=msid:")&&i>0&&0===sdpLines[i-1].indexOf("a=mid:"+track)){var parts=sdpLines[i].split(":")[1].split(" ");streamId=parts[0],trackId=parts[1],replaceSSRCSemantic=!0}};parseTracksSSRC("video"),parseTracksSSRC("audio"),updatedSdp=sdpLines.join("\r\n"),log.debug([targetMid,"RTCSessionDesription","answer","Parsed remote description from firefox"],sdpLines)}return updatedSdp},window.Skylink=Skylink}).call(this);